FROM node:14-alpine3.12
# do not copy files we mount in compose
# our local and production docker files could co-exist using "targets" in
# the `FROM` statements

LABEL \
    mitre.name=cveawg \
    mitre.project=cveawg \
    mitre.maintainer=mbianchi@mitre.org

# Install python/pip (required for argon2 build from source)
ENV PYTHONUNBUFFERED=1
RUN apk add --update --no-cache python3 && ln -sf python3 /usr/bin/python
RUN python3 -m ensurepip
RUN pip3 install --no-cache --upgrade pip setuptools

# Install build essentials (also required for argon2)
RUN apk add --update --no-cache build-base

# Set up directory to run as node user rather than root
ADD . /home/node/app
RUN chown -R node:node /home/node

WORKDIR /home/node/app

# Run as the node user rather than root
USER node

# copy into development container only what we need to have
# defined before running the application
COPY --chown=node:node config /home/node/app/config
COPY --chown=node:node datadump/pre-population /home/node/app/datadump/pre-population
COPY --chown=node:node docker/entrypoint.sh /home/node/app/entrypoint.sh
COPY --chown=node:node api-docs /home/node/app/api-docs
COPY --chown=node:node schemas /home/node/app/schemas
# Change db hostname from localhost to docdb for use inside docker
COPY --chown=node:node docker/default.json-docker /home/node/app/config/default.json

# include the package-lock file so npm "honors" it; remove it if
# a new lock should be generated from within docker
COPY --chown=node:node package-lock.json /home/node/app/package-lock.json
COPY --chown=node:node package.json /home/node/app/package.json

RUN npm install
RUN echo '{}' > /home/node/app/config/development.json
RUN echo '{}' > /home/node/app/config/integration.json
RUN echo '{}' > /home/node/app/config/production.json
RUN echo '{}' > /home/node/app/config/test.json
RUN echo '{}' > /home/node/app/config/staging.json

# we don't need to expose ports that are exposed in our compose file
ENTRYPOINT '/home/node/app/entrypoint.sh'
