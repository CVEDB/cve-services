[1m============================= test session starts ==============================[0m
platform linux -- Python 3.7.3, pytest-6.2.4, py-1.10.0, pluggy-0.13.1
rootdir: /app/src, configfile: pytest.ini
[1mcollecting ... [0m[1mcollected 199 items                                                            [0m

src/test/org.py [32m.[0m[32m                                                        [  0%][0m
src/test/cve_id.py [32m.[0m[32m                                                     [  1%][0m
src/test/cve_id_as_general_user.py [32m.[0m[32m.[0m[32m                                    [  2%][0m
src/test/cve_id_as_org_admin.py [32m.[0m[32m.[0m[32m                                       [  3%][0m
src/test/org.py [32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m                                                     [  5%][0m
src/test/org_as_org_admin.py [32m.[0m[32m.[0m[32m.[0m[32m                                         [  6%][0m
src/test/cve.py [32m.[0m[32m                                                        [  7%][0m
src/test/cve_id.py [32m.[0m[32m                                                     [  7%][0m
src/test/cve.py [31mF[0m[31m                                                        [  8%][0m
src/test/cve_id.py [32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[31m                   [ 25%][0m
src/test/cve_id_as_general_user.py [32m.[0m[31m                                     [ 26%][0m
src/test/cve.py [31mF[0m[31m                                                        [ 26%][0m
src/test/cve_id_as_general_user.py [32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[31m                                 [ 29%][0m
src/test/cve.py [32m.[0m[31m                                                        [ 29%][0m
src/test/cve_id_as_general_user.py [32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[31m              [ 41%][0m
src/test/cve_id_as_org_admin.py [32m.[0m[31m                                        [ 42%][0m
src/test/cve.py [32m.[0m[31m                                                        [ 42%][0m
src/test/cve_id_as_org_admin.py [32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[31m                                    [ 45%][0m
src/test/cve.py [32m.[0m[31m                                                        [ 45%][0m
src/test/cve_id_as_org_admin.py [32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[31m                 [ 57%][0m
src/test/cve_id_performance.py [32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[31m                                     [ 60%][0m
src/test/cve_id_range.py [32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[31m                         [ 71%][0m
src/test/org.py [32m.[0m[31m                                                        [ 72%][0m
src/test/cve.py [32m.[0m[32m.[0m[32m.[0m[32m.[0m[31m                                                     [ 74%][0m
src/test/org.py [32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[31m                                              [ 79%][0m
src/test/cve.py [31mF[0m[31m                                                        [ 80%][0m
src/test/org.py [32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[31m                                                  [ 83%][0m
src/test/org_as_org_admin.py [32m.[0m[31m                                           [ 84%][0m
src/test/cve.py [32m.[0m[31m                                                        [ 84%][0m
src/test/org_as_org_admin.py [32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[31m                                       [ 87%][0m
src/test/cve.py [32m.[0m[31m                                                        [ 87%][0m
src/test/org_as_org_admin.py [32m.[0m[32m.[0m[31m                                          [ 88%][0m
src/test/cve.py [32m.[0m[31m                                                        [ 89%][0m
src/test/org_as_org_admin.py [32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[31m                       [100%][0m

=================================== FAILURES ===================================
[31m[1m________________________ test_get_cve_by_time_modified _________________________[0m

    def test_get_cve_by_time_modified():
        t_before = dt.datetime.now().strftime('%Y-%m-%dT%H:%M:%S')
        time.sleep(1)
        update_cve('CVE-2021-0004_public', 'CVE-2021-0004')
        time.sleep(1)
        update_cve('CVE-2021-0003_public', 'CVE-2021-0003')
        time.sleep(1)
        t_after = dt.datetime.now().strftime('%Y-%m-%dT%H:%M:%S')
    
        res = requests.get(
            f'{env.AWG_BASE_URL}{CVE_URL}/',
            headers=utils.BASE_HEADERS,
            params={
                'time_modified.lt': t_after,
                'time_modified.gt': t_before
            }
        )
        assert res.status_code == utils.HTTP_OK
>       assert len(json.loads(res.content.decode())['cveRecords']) >= 2
[1m[31mE       AssertionError: assert 1 >= 2[0m
[1m[31mE        +  where 1 = len([{'CVE_data_meta': {'ASSIGNER': 'franciscoanderson@today_2.com', 'ID': 'CVE-2021-0004', 'STATE': 'PUBLIC'}, 'affects':...: [{'product': {...}, 'vendor_name': 'Myers, Snow and Christian'}]}}, 'data_format': 'MITRE', 'data_type': 'CVE', ...}])[0m

[1m[31msrc/test/cve.py[0m:73: AssertionError
[31m[1m_________________________________ test_get_cve _________________________________[0m

    def test_get_cve():
        res = requests.get(
            f'{env.AWG_BASE_URL}{CVE_URL}/{cve_id}',
            headers=utils.BASE_HEADERS
        )
>       ok_response_contains(res, cve_id)

[1m[31msrc/test/cve.py[0m:104: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

response = <Response [404]>, has_this = 'CVE-1999-0004'

    def ok_response_contains(response, has_this):
>       assert response.status_code == HTTP_OK
[1m[31mE       assert 404 == 200[0m
[1m[31mE        +  where 404 = <Response [404]>.status_code[0m

[1m[31msrc/utils.py[0m:39: AssertionError
[31m[1m____________________________ test_update_cve_record ____________________________[0m

    def test_update_cve_record():
        with open('./src/test/CVE-2021-0003_public.json') as json_file:
            data = json.load(json_file)
            res = requests.put(
                f'{env.AWG_BASE_URL}{CVE_URL}/{curr_cve_id}',
                headers=utils.BASE_HEADERS,
                json=data
            )
>           ok_response_contains(res, curr_cve_id)

[1m[31msrc/test/cve.py[0m:255: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

response = <Response [403]>, has_this = 'CVE-2021-0003'

    def ok_response_contains(response, has_this):
>       assert response.status_code == HTTP_OK
[1m[31mE       assert 403 == 200[0m
[1m[31mE        +  where 403 = <Response [403]>.status_code[0m

[1m[31msrc/utils.py[0m:39: AssertionError
=========================== short test summary info ============================
FAILED src/test/cve.py::test_get_cve_by_time_modified - AssertionError: asser...
FAILED src/test/cve.py::test_get_cve - assert 404 == 200
FAILED src/test/cve.py::test_update_cve_record - assert 403 == 200
[31m======================== [31m[1m3 failed[0m, [32m196 passed[0m[31m in 47.98s[0m[31m ========================[0m
