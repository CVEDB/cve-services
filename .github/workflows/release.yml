name: "Docker release"

on:
  release:
    types: [published]

# NOTE: We want to create a "latest" Github package on changes to `dev`, and actual releases (i.e., branches that start 
# with "release") when we create `release*` branches.

jobs:
  build-and-push-image:
    name: Push Docker image to GitHub Packages
    runs-on: ubuntu-latest
    # we can run tests here, and require that they pass
    # but tests should pass on the pull request used to kick this job off,
    # unless we allow changes to `dev` or `release` branches without PRs
    # needs: npm-run-tests
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2
    - name: Build and Push release to GCR
      # if: startsWith(github.ref, 'refs/heads/release')    # only build image with 'release' tag if event comes from a release branch
      run: |
        echo '::set-output name=branch-name::${GITHUB_REF#refs/heads/}'
        docker login docker.pkg.github.com \
          --username ${{ github.actor }} \
          --password ${{ secrets.GITHUB_TOKEN }}
        docker build . \
          --file docker/Dockerfile \
          --tag docker.pkg.github.com/${{github.repository}}/cveawg
        docker push docker.pkg.github.com/${{github.repository}}/cveawg
