name: "Docker latest"

on:
  push:
    branches: [dev] # This workflow will run when a PR is merged or when a commit is made directly to these branches. 
  pull_request:
    # NOTE: We want to create a "latest" Github package on changes to `dev`.

jobs:
  build-and-push-image:
    name: Push Docker image to GitHub Packages
    runs-on: ubuntu-latest
    # we can run tests here, and require that they pass
    # but tests should pass on the pull request used to kick this job off,
    # unless we allow changes to `dev` or `release` branches without PRs
    # needs: npm-run-tests
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2
    # - name: Build and Push latest to GCR
    #   run: |
    #     docker login docker.pkg.github.com \
    #       --username ${{ github.actor }} \
    #       --password ${{ secrets.GITHUB_TOKEN }}
    #     docker build \
    #       --file docker/Dockerfile \
    #       --tag docker.pkg.github.com/cveproject/cveservices:latest .
    #     docker push docker.pkg.github.com/cveproject/cveservices:latest
    - name: Log in to the Container registry
      run: |
        docker login docker.pkg.github.com \
          --username ${{ github.actor }} \
          --password ${{ secrets.GITHUB_TOKEN }}
    - name: Build Docker image
      run: |
        docker build \
        --file docker/Dockerfile \
        --tag docker.pkg.github.com/cveproject/cve-services/cveservices-dev:latest .
    - name: Push Docker image to GCR
      run: |
        docker image ls
        docker image tag docker.pkg.github.com/cveproject/cve-services/cveservices-dev docker.pkg.github.com/cveproject/cve-services/cveservices-dev:latest
        docker image push docker.pkg.github.com/cveproject/cve-services/cveservices-dev:latest
