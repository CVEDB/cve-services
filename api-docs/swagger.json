{
  "openapi": "3.0.2",
  "info": {
    "version": "3.0.2",
    "title": "CVE Services API",
    "description": "The CVE services API which supports automation tooling for the CVE Project."
  },
  "servers": [
    {
      "url": "http://TODO: Add automation to set this to each environment/api/"
    }
  ],
  "paths": {
    "/cve-id": {
      "get": {
        "tags": [
          "CVE ID"
        ],
        "summary": "Retrieves all CVE IDs entity owns after applying the query params",
        "description": "  <h2>Access Control</h2>  <p>No roles needed to access the endpoint</p>  <h2>Expected Behavior</h2>  <p><b>Secretariat:</b> Can see CVE-IDs owned by any Organization</p>  <p><b>Admin User:</b> Can only see CVE-IDs owned by the Organization it belongs to</p>  <p><b>Regular User:</b> Can only see CVE-IDs owned by the Organization it belongs to</p>",
        "operationId": "cveIdGetFiltered",
        "parameters": [
          {
            "$ref": "#/components/parameters/cveIdGetFilteredState"
          },
          {
            "$ref": "#/components/parameters/cveIdGetFilteredCveIdYear"
          },
          {
            "$ref": "#/components/parameters/cveIdGetFilteredTimeReservedLt"
          },
          {
            "$ref": "#/components/parameters/cveIdGetFilteredTimeReservedGt"
          },
          {
            "$ref": "#/components/parameters/cveIdGetFilteredTimeModifiedLt"
          },
          {
            "$ref": "#/components/parameters/cveIdGetFilteredTimeModifiedGt"
          },
          {
            "$ref": "#/components/parameters/pageQuery"
          },
          {
            "$ref": "#/components/parameters/apiEntityHeader"
          },
          {
            "$ref": "#/components/parameters/apiUserHeader"
          },
          {
            "$ref": "#/components/parameters/apiSecretHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "A filtered list of CVE-ID records the organization owns given the query parameters.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/cveIdGetFiltered200"
                },
                "examples": {
                  "cveIdGetFiltered200": {
                    "$ref": "#/components/examples/cveIdGetFiltered200"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorBadInput"
                },
                "examples": {
                  "errorBadInput": {
                    "$ref": "#/components/examples/errorBadInput"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Not Authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorGeneric"
                },
                "examples": {
                  "errorGeneric": {
                    "$ref": "#/components/examples/errorGeneric"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorGeneric"
                },
                "examples": {
                  "errorGeneric": {
                    "$ref": "#/components/examples/errorGeneric"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorGeneric"
                },
                "examples": {
                  "errorGeneric": {
                    "$ref": "#/components/examples/errorGeneric"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorGeneric"
                },
                "examples": {
                  "errorGeneric": {
                    "$ref": "#/components/examples/internalServerError"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "CVE ID"
        ],
        "summary": "Reserves CVE-ID records for the organization provided in the short_name query parameter",
        "description": "  <h2>Access Control</h2>  <p>At least one of the following roles are needed to access the endpoint:</p>  <p>- <b>CNA:</b> The user must belong to an Organization with the “CNA” role</p>  <h2>Expected Behavior</h2>  <p><b>Secretariat:</b> Can reserve CVE-IDs for any Organization</p>  <p><b>CNA:</b> Can only reserve CVE-IDs for its Organization</p>",
        "operationId": "cveIdReserve",
        "parameters": [
          {
            "$ref": "#/components/parameters/amount"
          },
          {
            "$ref": "#/components/parameters/batch_type"
          },
          {
            "$ref": "#/components/parameters/cve_year"
          },
          {
            "$ref": "#/components/parameters/short_name"
          },
          {
            "$ref": "#/components/parameters/apiEntityHeader"
          },
          {
            "$ref": "#/components/parameters/apiUserHeader"
          },
          {
            "$ref": "#/components/parameters/apiSecretHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of the newly reserved CVE-IDs.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/arrayOfCveIdsNoTime"
                },
                "examples": {
                  "arrayOfCveIdsNoTime": {
                    "$ref": "#/components/examples/arrayOfCveIdsNoTime200"
                  }
                }
              }
            }
          },
          "206": {
            "description": "A partial list of the CVE-IDs the IDR service managed to reserve before encountering a case where no more CVE IDs could be reserved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorCveIds"
                },
                "examples": {
                  "errorCveIds": {
                    "$ref": "#/components/examples/errorCveIds206"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorBadInput"
                },
                "examples": {
                  "errorBadInput": {
                    "$ref": "#/components/examples/errorBadInput"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Not Authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorGeneric"
                },
                "examples": {
                  "errorGeneric": {
                    "$ref": "#/components/examples/errorGeneric"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorGeneric"
                },
                "examples": {
                  "errorGeneric": {
                    "$ref": "#/components/examples/errorGeneric"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorGeneric"
                },
                "examples": {
                  "errorGeneric": {
                    "$ref": "#/components/examples/errorGeneric"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorGeneric"
                },
                "examples": {
                  "errorGeneric": {
                    "$ref": "#/components/examples/internalServerError"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/cve-id/{id}": {
      "get": {
        "tags": [
          "CVE ID"
        ],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "put": {
        "tags": [
          "CVE ID"
        ],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/cve-id-range/{year}": {
      "post": {
        "tags": [
          "CVE ID"
        ],
        "description": "",
        "parameters": [
          {
            "name": "year",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/cve/{id}": {
      "get": {
        "tags": [
          "CVE Record"
        ],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "post": {
        "tags": [
          "CVE Record"
        ],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "dataVersion": {
                    "example": "any"
                  },
                  "req": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "CVE Record"
        ],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "dataVersion": {
                    "example": "any"
                  },
                  "req": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/cve": {
      "get": {
        "tags": [
          "CVE Record"
        ],
        "description": "",
        "parameters": [],
        "responses": {
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/cve/{id}/cna": {
      "post": {
        "tags": [
          "CVE Record"
        ],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "put": {
        "tags": [
          "CVE Record"
        ],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/cve/{id}/reject": {
      "post": {
        "tags": [
          "CVE Record"
        ],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "put": {
        "tags": [
          "CVE Record"
        ],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/org": {
      "get": {
        "tags": [
          "Organization"
        ],
        "summary": "Retrieves all organization records",
        "description": "  <h2>Access Control</h2>  <p>At least one of the following roles are needed to access the endpoint:</p>  <p>- <b>SECRETARIAT:</b> The user must belong to an Organization with the “SECRETARIAT” role</p>  <h2>Expected Behavior</h2>  <p><b>Secretariat:</b> Can see the information of all Organizations</p>",
        "operationId": "orgAll",
        "parameters": [
          {
            "$ref": "#/components/parameters/pageQuery"
          },
          {
            "$ref": "#/components/parameters/apiEntityHeader"
          },
          {
            "$ref": "#/components/parameters/apiUserHeader"
          },
          {
            "$ref": "#/components/parameters/apiSecretHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns all organization records.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/orgAll200"
                },
                "examples": {
                  "orgAll200": {
                    "$ref": "#/components/examples/orgAll200"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorBadInput"
                },
                "examples": {
                  "errorBadInput": {
                    "$ref": "#/components/examples/errorBadInput"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Not Authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorGeneric"
                },
                "examples": {
                  "errorGeneric": {
                    "$ref": "#/components/examples/errorGeneric"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorGeneric"
                },
                "examples": {
                  "errorGeneric": {
                    "$ref": "#/components/examples/errorGeneric"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorGeneric"
                },
                "examples": {
                  "errorGeneric": {
                    "$ref": "#/components/examples/errorGeneric"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorGeneric"
                },
                "examples": {
                  "errorGeneric": {
                    "$ref": "#/components/examples/internalServerError"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Organization"
        ],
        "summary": "Creates an organization record",
        "description": "  <h2>Access Control</h2>  <p>At least one of the following roles are needed to access the endpoint:</p>  <p>- <b>SECRETARIAT:</b> The user must belong to an Organization with the “SECRETARIAT” role</p>  <h2>Expected Behavior</h2>  <p><b>Secretariat:</b> Can create any Organization record</p>  ",
        "operationId": "orgCreateSingle",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiEntityHeader"
          },
          {
            "$ref": "#/components/parameters/apiUserHeader"
          },
          {
            "$ref": "#/components/parameters/apiSecretHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the organization record created.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/createOrg200"
                },
                "examples": {
                  "createOrg200": {
                    "$ref": "#/components/examples/createOrg200"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorBadInput"
                },
                "examples": {
                  "errorBadInput": {
                    "$ref": "#/components/examples/errorBadInput"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Not Authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorGeneric"
                },
                "examples": {
                  "errorGeneric": {
                    "$ref": "#/components/examples/errorGeneric"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorGeneric"
                },
                "examples": {
                  "errorGeneric": {
                    "$ref": "#/components/examples/errorGeneric"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorGeneric"
                },
                "examples": {
                  "errorGeneric": {
                    "$ref": "#/components/examples/errorGeneric"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorGeneric"
                },
                "examples": {
                  "errorGeneric": {
                    "$ref": "#/components/examples/internalServerError"
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/createOrgRequestBody"
              },
              "examples": {
                "createOrgRequestBody": {
                  "$ref": "#/components/examples/createOrgRequestBody"
                }
              }
            }
          }
        }
      }
    },
    "/org/{identifier}": {
      "get": {
        "tags": [
          "Organization"
        ],
        "summary": "Retrieve an organization's data given the identifier, which can be their short name or the organization's uuid.",
        "description": "  <h2>Access Control</h2>  <p>No roles needed to access the endpoint</p>  <h2>Expected Behavior</h2>  <p><b>Secretariat:</b> Can see the information of any Organization</p>  <p><b>Admin User:</b> Can only see the information of the Organization it belongs to</p>  <p><b>Regular User:</b> Can only see the information of the Organization it belongs to</p>  ",
        "operationId": "orgSingle",
        "parameters": [
          {
            "name": "identifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The short name or UUID of the organization"
          },
          {
            "$ref": "#/components/parameters/apiEntityHeader"
          },
          {
            "$ref": "#/components/parameters/apiUserHeader"
          },
          {
            "$ref": "#/components/parameters/apiSecretHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the organization record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/org"
                },
                "examples": {
                  "org": {
                    "$ref": "#/components/examples/org200"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorBadInput"
                },
                "examples": {
                  "errorBadInput": {
                    "$ref": "#/components/examples/errorBadInput"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Not Authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorGeneric"
                },
                "examples": {
                  "errorGeneric": {
                    "$ref": "#/components/examples/errorGeneric"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorGeneric"
                },
                "examples": {
                  "errorGeneric": {
                    "$ref": "#/components/examples/errorGeneric"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorGeneric"
                },
                "examples": {
                  "errorGeneric": {
                    "$ref": "#/components/examples/errorGeneric"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorGeneric"
                },
                "examples": {
                  "errorGeneric": {
                    "$ref": "#/components/examples/internalServerError"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/org/{shortname}": {
      "put": {
        "tags": [
          "Organization"
        ],
        "summary": "Update an organization record",
        "description": "  <h2>Access Control</h2>  <p>At least one of the following roles are needed to access the endpoint:</p>  <p>- <b>SECRETARIAT:</b> The user must belong to an Organization with the “SECRETARIAT” role to access the endpoint</p>  <h2>Expected Behavior</h2>  <p><b>Secretariat:</b> Can update the information of any Organization</p>",
        "operationId": "orgUpdateSingle",
        "parameters": [
          {
            "name": "shortname",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The short name of the organization."
          },
          {
            "$ref": "#/components/parameters/shortname"
          },
          {
            "$ref": "#/components/parameters/id_quota"
          },
          {
            "$ref": "#/components/parameters/name"
          },
          {
            "$ref": "#/components/parameters/active_roles_add"
          },
          {
            "$ref": "#/components/parameters/active_roles_remove"
          },
          {
            "$ref": "#/components/parameters/apiEntityHeader"
          },
          {
            "$ref": "#/components/parameters/apiUserHeader"
          },
          {
            "$ref": "#/components/parameters/apiSecretHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the organization record updated.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/updateOrg200"
                },
                "examples": {
                  "updateOrg200": {
                    "$ref": "#/components/examples/updateOrg200"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorBadInput"
                },
                "examples": {
                  "errorBadInput": {
                    "$ref": "#/components/examples/errorBadInput"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Not Authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorGeneric"
                },
                "examples": {
                  "errorGeneric": {
                    "$ref": "#/components/examples/errorGeneric"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorGeneric"
                },
                "examples": {
                  "errorGeneric": {
                    "$ref": "#/components/examples/errorGeneric"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorGeneric"
                },
                "examples": {
                  "errorGeneric": {
                    "$ref": "#/components/examples/errorGeneric"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorGeneric"
                },
                "examples": {
                  "errorGeneric": {
                    "$ref": "#/components/examples/internalServerError"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/org/{shortname}/users": {
      "get": {
        "tags": [
          "Users"
        ],
        "description": "",
        "parameters": [
          {
            "name": "shortname",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/org/{shortname}/user": {
      "post": {
        "tags": [
          "Users"
        ],
        "description": "",
        "parameters": [
          {
            "name": "shortname",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/org/{shortname}/user/{username}": {
      "get": {
        "tags": [
          "Users"
        ],
        "description": "",
        "parameters": [
          {
            "name": "shortname",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "username",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "put": {
        "tags": [
          "Users"
        ],
        "description": "",
        "parameters": [
          {
            "name": "shortname",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "username",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/org/{shortname}/user/{username}/reset_secret": {
      "put": {
        "tags": [
          "Users"
        ],
        "description": "",
        "parameters": [
          {
            "name": "shortname",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "username",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/org/{shortname}/id_quota": {
      "get": {
        "tags": [
          "Organization"
        ],
        "summary": "Retrieves the details about the CVE ID quota information of an organization",
        "description": "  <h2>Access Control</h2>  <p>No roles needed to access the endpoint</p>  <h2>Expected Behavior</h2>  <p><b>Secretariat:</b> Can see the CVE ID quota information of any Organization</p>  <p><b>Admin User:</b> Can only see the CVE ID quota information of the Organization it belongs to</p>  <p><b>Regular User:</b> Can only see the CVE ID quota information of the Organization it belongs to</p>",
        "operationId": "orgIdQuota",
        "parameters": [
          {
            "name": "shortname",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The short name of the organization."
          },
          {
            "$ref": "#/components/parameters/apiEntityHeader"
          },
          {
            "$ref": "#/components/parameters/apiUserHeader"
          },
          {
            "$ref": "#/components/parameters/apiSecretHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns CVE ID quota details of an organization.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/idQuota200"
                },
                "examples": {
                  "idQuota200": {
                    "$ref": "#/components/examples/idQuota200"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorBadInput"
                },
                "examples": {
                  "errorBadInput": {
                    "$ref": "#/components/examples/errorBadInput"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Not Authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorGeneric"
                },
                "examples": {
                  "errorGeneric": {
                    "$ref": "#/components/examples/errorGeneric"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorGeneric"
                },
                "examples": {
                  "errorGeneric": {
                    "$ref": "#/components/examples/errorGeneric"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorGeneric"
                },
                "examples": {
                  "errorGeneric": {
                    "$ref": "#/components/examples/errorGeneric"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorGeneric"
                },
                "examples": {
                  "errorGeneric": {
                    "$ref": "#/components/examples/internalServerError"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users": {
      "get": {
        "tags": [
          "Users"
        ],
        "description": "",
        "parameters": [],
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    }
  },
  "components": {
    "examples": {
      "createOrg200": {
        "value": {
          "message": "mitre organization was successfully created.",
          "created": {
            "name": "Mitre",
            "short_name": "mitre",
            "UUID": "00000000-0000-0000-0000-000000000000",
            "policies": {
              "id_quota": 100000
            },
            "authority": {
              "active_roles": [
                "CNA"
              ]
            },
            "time": {
              "created": "string",
              "modified": "string"
            }
          }
        }
      },
      "createOrgRequestBody": {
        "value": {
          "short_name": "mitre",
          "name": "Mitre",
          "uuid": "00000000-0000-0000-0000-000000000000",
          "authority": {
            "active_roles": [
              "CNA"
            ]
          },
          "policies": {
            "id_quota": 100000
          }
        }
      },
      "cveIdGetFiltered200": {
        "value": {
          "totalCount": 0,
          "itemsPerPage": 0,
          "pageCount": 0,
          "currentPage": 0,
          "prevPage": 0,
          "nextPage": 0,
          "cve_ids": [
            {
              "cve_id": "CVE-1999-0001",
              "cve_year": "1999",
              "owning_cna": "mitre",
              "state": "RESERVED",
              "requested_by": {
                "cna": "string",
                "user": "string"
              }
            }
          ]
        }
      },
      "arrayOfCveIdsNoTime200": {
        "value": {
          "cve_ids": [
            {
              "cve_id": "CVE-1999-0001",
              "cve_year": "1999",
              "owning_cna": "mitre",
              "state": "RESERVED",
              "requested_by": {
                "cna": "string",
                "user": "string"
              },
              "reserved": "string"
            }
          ]
        }
      },
      "errorBadInput": {
        "value": {
          "error": "string",
          "message": "string",
          "details": [
            {
              "msg": "string",
              "param": "string",
              "location": "string"
            }
          ]
        }
      },
      "errorCveIds206": {
        "value": {
          "error": "string",
          "message": "string",
          "details": {
            "amount_reserved": 0
          },
          "cve_ids": [
            {
              "cve_id": "CVE-1999-0001",
              "cve_year": "1999",
              "owning_cna": "mitre",
              "state": "RESERVED",
              "requested_by": {
                "cna": "string",
                "user": "string"
              },
              "reserved": "string"
            }
          ]
        }
      },
      "errorGeneric": {
        "value": {
          "error": "string",
          "message": "string"
        }
      },
      "idQuota200": {
        "value": {
          "id_quota": 1000,
          "total_reserved": 100,
          "available": 900
        }
      },
      "internalServerError": {
        "value": {
          "error": "SERVICE_NOT_AVAILABLE",
          "message": "This service appears to not be available."
        }
      },
      "org200": {
        "value": {
          "name": "Mitre",
          "short_name": "mitre",
          "UUID": "00000000-0000-0000-0000-000000000000",
          "policies": {
            "id_quota": 100000
          },
          "authority": {
            "active_roles": [
              "CNA"
            ]
          },
          "time": {
            "created": "string",
            "modified": "string"
          }
        }
      },
      "orgAll200": {
        "value": {
          "totalCount": 0,
          "itemsPerPage": 0,
          "pageCount": 0,
          "currentPage": 0,
          "prevPage": 0,
          "nextPage": 0,
          "organizations": [
            {
              "name": "string",
              "short_name": "string",
              "UUID": "string",
              "policies": {
                "id_quota": 100000
              },
              "authority": {
                "active_roles": [
                  "CNA"
                ]
              },
              "time": {
                "created": "string",
                "modified": "string"
              }
            }
          ]
        }
      },
      "updateOrg200": {
        "value": {
          "message": "mitre organization was successfully updated.",
          "updated": {
            "name": "Mitre",
            "short_name": "mitre",
            "UUID": "00000000-0000-0000-0000-000000000000",
            "policies": {
              "id_quota": 100000
            },
            "authority": {
              "active_roles": [
                "CNA"
              ]
            },
            "time": {
              "created": "string",
              "modified": "string"
            }
          }
        }
      }
    },
    "parameters": {
      "active_roles_add": {
        "in": "query",
        "name": "active_roles.add",
        "description": "Add an active role to the organization.",
        "required": false,
        "schema": {
          "type": "string",
          "enum": [
            "CNA",
            "SECRETARIAT",
            "ROOT_CNA",
            "ADP"
          ]
        }
      },
      "active_roles_remove": {
        "in": "query",
        "name": "active_roles.remove",
        "description": "Remove an active role from the organization.",
        "required": false,
        "schema": {
          "type": "string",
          "enum": [
            "CNA",
            "SECRETARIAT",
            "ROOT_CNA",
            "ADP"
          ]
        }
      },
      "apiEntityHeader": {
        "in": "header",
        "name": "CVE-API-ORG",
        "description": "The shortname for the entity (e.g., CNA, ADP) that is authenticated or requesting authentication.",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "apiUserHeader": {
        "in": "header",
        "name": "CVE-API-USER",
        "description": "The username for the account that is making the request.",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "apiSecretHeader": {
        "in": "header",
        "name": "CVE-API-KEY",
        "description": "The user's API key.",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "amount": {
        "in": "query",
        "name": "amount",
        "description": "Amount of CVE IDs to reserve.",
        "required": true,
        "schema": {
          "type": "integer",
          "format": "int32"
        }
      },
      "batch_type": {
        "in": "query",
        "name": "batch_type",
        "description": "When the amount is greater than one, it indicates whether the CVE IDs should be sequential or non-sequential.",
        "required": false,
        "schema": {
          "type": "string",
          "enum": [
            "sequential",
            "non-sequential"
          ]
        }
      },
      "cve_year": {
        "in": "query",
        "name": "cve_year",
        "description": "The year the CVE IDs will be reserved for. (i.e., 1999, ..., currentYear + 1)",
        "required": true,
        "schema": {
          "type": "integer",
          "format": "int32"
        }
      },
      "cveIdGetFilteredState": {
        "in": "query",
        "name": "state",
        "description": "Filter by CVE state [RESERVED, PUBLISHED, REJECTED].",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "cveIdGetFilteredCveIdYear": {
        "in": "query",
        "name": "cve_id_year",
        "description": "Filter by the year in the CVE ID (YYYY).",
        "required": false,
        "schema": {
          "type": "integer",
          "format": "int32"
        }
      },
      "cveIdGetFilteredTimeReservedLt": {
        "in": "query",
        "name": "time_reserved.lt",
        "description": "Get all CVE-ID records reserved before timestamp.",
        "required": false,
        "schema": {
          "type": "string",
          "format": "date-time"
        }
      },
      "cveIdGetFilteredTimeReservedGt": {
        "in": "query",
        "name": "time_reserved.gt",
        "description": "Get all CVE-ID records reserved after timestamp.",
        "required": false,
        "schema": {
          "type": "string",
          "format": "date-time"
        }
      },
      "cveIdGetFilteredTimeModifiedLt": {
        "in": "query",
        "name": "time_modified.lt",
        "description": "Get all CVE-ID records modified before timestamp.",
        "required": false,
        "schema": {
          "type": "string",
          "format": "date-time"
        }
      },
      "cveIdGetFilteredTimeModifiedGt": {
        "in": "query",
        "name": "time_modified.gt",
        "description": "Get all CVE-ID records modified after timestamp.",
        "required": false,
        "schema": {
          "type": "string",
          "format": "date-time"
        }
      },
      "id_quota": {
        "in": "query",
        "name": "id_quota",
        "description": "Update the number of CVE IDs the organization is allowed to have in the RESERVED state at one time.",
        "required": false,
        "schema": {
          "type": "integer",
          "format": "int32",
          "minimum": 0,
          "maximum": 100000
        }
      },
      "name": {
        "in": "query",
        "name": "name",
        "description": "Update the name of the organization.",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "pageQuery": {
        "in": "query",
        "name": "page",
        "description": "The current page in the paginator.",
        "required": false,
        "schema": {
          "type": "integer",
          "format": "int32",
          "minimum": 1
        }
      },
      "short_name": {
        "in": "query",
        "name": "short_name",
        "description": "The CNA that will own the CVE IDs reserved.",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "shortname": {
        "in": "query",
        "name": "shortname",
        "description": "Update the short name of the organization.",
        "required": false,
        "schema": {
          "type": "string"
        }
      }
    },
    "schemas": {
      "createOrg200": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "example": "object"
          },
          "properties": {
            "type": "object",
            "properties": {
              "message": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "string"
                  },
                  "description": {
                    "type": "string",
                    "example": "Success description"
                  }
                }
              },
              "created": {
                "$ref": "#/components/schemas/org"
              }
            }
          }
        }
      },
      "createOrgRequestBody": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "example": "object"
          },
          "required": {
            "type": "array",
            "example": [
              "short_name",
              "name"
            ],
            "items": {
              "type": "string"
            }
          },
          "properties": {
            "type": "object",
            "properties": {
              "short_name": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "string"
                  },
                  "description": {
                    "type": "string",
                    "example": "The short name of the organization."
                  }
                }
              },
              "name": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "string"
                  },
                  "description": {
                    "type": "string",
                    "example": "The name of the organization."
                  }
                }
              },
              "uuid": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "string"
                  },
                  "description": {
                    "type": "string",
                    "example": "The organization identifier."
                  }
                }
              },
              "authority": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "object"
                  },
                  "properties": {
                    "type": "object",
                    "properties": {
                      "active_roles": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "array"
                          },
                          "items": {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string",
                                "example": "string"
                              },
                              "description": {
                                "type": "string",
                                "example": "The active roles of the organization."
                              },
                              "enum": {
                                "type": "array",
                                "example": [
                                  "CNA",
                                  "SECRETARIAT",
                                  "ROOT_CNA",
                                  "ADP"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "policies": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "object"
                  },
                  "properties": {
                    "type": "object",
                    "properties": {
                      "id_quota": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "integer"
                          },
                          "format": {
                            "type": "string",
                            "example": "int32"
                          },
                          "description": {
                            "type": "string",
                            "example": "The CVE ID quota of the organization."
                          },
                          "minimum": {
                            "type": "number",
                            "example": 0
                          },
                          "maximum": {
                            "type": "number",
                            "example": 100000
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "cveId": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "example": "object"
          },
          "properties": {
            "type": "object",
            "properties": {
              "cve_id": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "string"
                  },
                  "pattern": {
                    "type": "string",
                    "example": "^CVE-[0-9]{4}-[0-9]{4,}$"
                  }
                }
              },
              "cve_year": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "string"
                  },
                  "pattern": {
                    "type": "string",
                    "example": "^[0-9]{4}$"
                  }
                }
              },
              "owning_cna": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "string"
                  },
                  "description": {
                    "type": "string",
                    "example": "The shortname for the organization that owns the CVE-ID."
                  }
                }
              },
              "state": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "string"
                  },
                  "enum": {
                    "type": "array",
                    "example": [
                      "RESERVED",
                      "PUBLISHED",
                      "REJECTED"
                    ],
                    "items": {
                      "type": "string"
                    }
                  }
                }
              },
              "requested_by": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "object"
                  },
                  "properties": {
                    "type": "object",
                    "properties": {
                      "cna": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "string"
                          },
                          "description": {
                            "type": "string",
                            "example": "The shortname for the organization of the user that requested the ID."
                          }
                        }
                      },
                      "user": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "string"
                          },
                          "description": {
                            "type": "string",
                            "example": "The username for the account that requested the ID."
                          }
                        }
                      }
                    }
                  }
                }
              },
              "reserved": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "string"
                  },
                  "format": {
                    "type": "string",
                    "example": "date-time"
                  },
                  "description": {
                    "type": "string",
                    "example": "The time the ID was reserved."
                  }
                }
              },
              "time": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "object"
                  },
                  "properties": {
                    "type": "object",
                    "properties": {
                      "created": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "string"
                          },
                          "format": {
                            "type": "string",
                            "example": "date-time"
                          },
                          "description": {
                            "type": "string",
                            "example": "The time the ID was created."
                          }
                        }
                      },
                      "modified": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "string"
                          },
                          "format": {
                            "type": "string",
                            "example": "date-time"
                          },
                          "description": {
                            "type": "string",
                            "example": "The last time the ID was modified."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "cveIdNoTime": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "example": "object"
          },
          "properties": {
            "type": "object",
            "properties": {
              "cve_id": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "string"
                  },
                  "pattern": {
                    "type": "string",
                    "example": "^CVE-[0-9]{4}-[0-9]{4,}$"
                  }
                }
              },
              "cve_year": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "string"
                  },
                  "pattern": {
                    "type": "string",
                    "example": "^[0-9]{4}$"
                  }
                }
              },
              "owning_cna": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "string"
                  },
                  "description": {
                    "type": "string",
                    "example": "The shortname for the organization that owns the CVE-ID."
                  }
                }
              },
              "state": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "string"
                  },
                  "enum": {
                    "type": "array",
                    "example": [
                      "RESERVED",
                      "PUBLISHED",
                      "REJECTED"
                    ],
                    "items": {
                      "type": "string"
                    }
                  }
                }
              },
              "requested_by": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "object"
                  },
                  "properties": {
                    "type": "object",
                    "properties": {
                      "cna": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "string"
                          },
                          "description": {
                            "type": "string",
                            "example": "The shortname for the organization of the user that requested the ID."
                          }
                        }
                      },
                      "user": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "string"
                          },
                          "description": {
                            "type": "string",
                            "example": "The username for the account that requested the ID."
                          }
                        }
                      }
                    }
                  }
                }
              },
              "reserved": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "string"
                  },
                  "format": {
                    "type": "string",
                    "example": "date-time"
                  },
                  "description": {
                    "type": "string",
                    "example": "The time the ID was reserved."
                  }
                }
              }
            }
          }
        }
      },
      "arrayOfCveIds": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "example": "array"
          },
          "items": {
            "$ref": "#/components/schemas/cveId"
          }
        }
      },
      "arrayOfCveIdsNoTime": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "example": "array"
          },
          "items": {
            "$ref": "#/components/schemas/cveIdNoTime"
          }
        }
      },
      "arrayOfOrgs": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "example": "array"
          },
          "items": {
            "$ref": "#/components/schemas/org"
          }
        }
      },
      "arrayOfOrgsNotTime": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "example": "array"
          },
          "items": {
            "$ref": "#/components/schemas/orgNoTime"
          }
        }
      },
      "arrayOfUsersNoSecret": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "example": "array"
          },
          "items": {
            "$ref": "#/components/schemas/userNoSecret"
          }
        }
      },
      "cveIdGetFiltered200": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "example": "object"
          },
          "properties": {
            "type": "object",
            "properties": {
              "totalCount": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "integer"
                  },
                  "format": {
                    "type": "string",
                    "example": "int32"
                  },
                  "description": {
                    "type": "string",
                    "example": "Total CVE records found"
                  }
                }
              },
              "itemsPerPage": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "integer"
                  },
                  "format": {
                    "type": "string",
                    "example": "int32"
                  },
                  "description": {
                    "type": "string",
                    "example": "Number of CVE records in a page"
                  }
                }
              },
              "pageCount": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "integer"
                  },
                  "format": {
                    "type": "string",
                    "example": "int32"
                  },
                  "description": {
                    "type": "string",
                    "example": "Total number of pages"
                  }
                }
              },
              "currentPage": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "integer"
                  },
                  "format": {
                    "type": "string",
                    "example": "int32"
                  },
                  "description": {
                    "type": "string",
                    "example": "Current page"
                  }
                }
              },
              "prevPage": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "integer"
                  },
                  "format": {
                    "type": "string",
                    "example": "int32"
                  },
                  "description": {
                    "type": "string",
                    "example": "Previous page"
                  }
                }
              },
              "nextPage": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "integer"
                  },
                  "format": {
                    "type": "string",
                    "example": "int32"
                  },
                  "description": {
                    "type": "string",
                    "example": "Next page"
                  }
                }
              },
              "cve_ids": {
                "$ref": "#/components/schemas/arrayOfCveIds"
              }
            }
          }
        }
      },
      "errorBadInput": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "example": "object"
          },
          "properties": {
            "type": "object",
            "properties": {
              "error": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "string"
                  },
                  "description": {
                    "type": "string",
                    "example": "Error name"
                  }
                }
              },
              "message": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "string"
                  },
                  "description": {
                    "type": "string",
                    "example": "Error description"
                  }
                }
              },
              "details": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "array"
                  },
                  "properties": {
                    "type": "object",
                    "properties": {
                      "msg": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "string"
                          },
                          "description": {
                            "type": "string",
                            "example": "Invalid value"
                          }
                        }
                      },
                      "param": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "string"
                          },
                          "description": {
                            "type": "string",
                            "example": "The name of the parameter with the error"
                          }
                        }
                      },
                      "location": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "string"
                          },
                          "enum": {
                            "type": "array",
                            "example": [
                              "body",
                              "param",
                              "query"
                            ],
                            "items": {
                              "type": "string"
                            }
                          },
                          "description": {
                            "type": "string",
                            "example": "The location of the parameter"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "errorCveIds": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "example": "object"
          },
          "properties": {
            "type": "object",
            "properties": {
              "error": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "string"
                  },
                  "description": {
                    "type": "string",
                    "example": "Error name"
                  }
                }
              },
              "message": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "string"
                  },
                  "description": {
                    "type": "string",
                    "example": "Error description"
                  }
                }
              },
              "details": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "object"
                  },
                  "properties": {
                    "type": "object",
                    "properties": {
                      "amount_reserved": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "integer"
                          },
                          "format": {
                            "type": "string",
                            "example": "int32"
                          },
                          "description": {
                            "type": "string",
                            "example": "The amount of IDs that were reserved in the system."
                          }
                        }
                      }
                    }
                  }
                }
              },
              "cve_ids": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "array"
                  },
                  "items": {
                    "$ref": "#/components/schemas/cveIdNoTime"
                  }
                }
              }
            }
          }
        }
      },
      "errorGeneric": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "example": "object"
          },
          "properties": {
            "type": "object",
            "properties": {
              "error": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "string"
                  },
                  "description": {
                    "type": "string",
                    "example": "Error name"
                  }
                }
              },
              "message": {
                "type": "object",
                "properties": {
                  "error": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "example": "string"
                      },
                      "description": {
                        "type": "string",
                        "example": "Error description"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "idQuota200": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "example": "object"
          },
          "properties": {
            "type": "object",
            "properties": {
              "id_quota": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "integer"
                  },
                  "format": {
                    "type": "string",
                    "example": "int32"
                  },
                  "description": {
                    "type": "string",
                    "example": "The number of CVE IDs the organization is allowed to have in the RESERVED state at one time."
                  }
                }
              },
              "total_reserved": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "integer"
                  },
                  "format": {
                    "type": "string",
                    "example": "int32"
                  },
                  "description": {
                    "type": "string",
                    "example": "The total number of CVE IDs across all years that the organization has in the RESERVED state."
                  }
                }
              },
              "available": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "integer"
                  },
                  "format": {
                    "type": "string",
                    "example": "int32"
                  },
                  "description": {
                    "type": "string",
                    "example": "The number of CVE IDs that can be reserved by the organization. (e.g., id_quota - total_reserved)"
                  }
                }
              }
            }
          }
        }
      },
      "org": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "example": "object"
          },
          "properties": {
            "type": "object",
            "properties": {
              "name": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "string"
                  },
                  "description": {
                    "type": "string",
                    "example": "The name of the organization."
                  }
                }
              },
              "short_name": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "string"
                  },
                  "description": {
                    "type": "string",
                    "example": "The short name of the organization."
                  }
                }
              },
              "UUID": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "string"
                  },
                  "description": {
                    "type": "string",
                    "example": "The identifier of the organization."
                  }
                }
              },
              "policies": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "object"
                  },
                  "properties": {
                    "type": "object",
                    "properties": {
                      "id_quota": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "integer"
                          },
                          "format": {
                            "type": "string",
                            "example": "int32"
                          },
                          "description": {
                            "type": "string",
                            "example": "The number of CVE IDs the organization is allowed to have in the RESERVED state at one time."
                          },
                          "minimum": {
                            "type": "number",
                            "example": 0
                          },
                          "maximum": {
                            "type": "number",
                            "example": 100000
                          }
                        }
                      }
                    }
                  }
                }
              },
              "authority": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "object"
                  },
                  "properties": {
                    "type": "object",
                    "properties": {
                      "active_roles": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "array"
                          },
                          "items": {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string",
                                "example": "string"
                              },
                              "description": {
                                "type": "string",
                                "example": "The active roles of the organization."
                              },
                              "enum": {
                                "type": "array",
                                "example": [
                                  "CNA",
                                  "SECRETARIAT",
                                  "ROOT_CNA",
                                  "ADP"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "time": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "object"
                  },
                  "properties": {
                    "type": "object",
                    "properties": {
                      "created": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "string"
                          },
                          "format": {
                            "type": "string",
                            "example": "date-time"
                          },
                          "description": {
                            "type": "string",
                            "example": "The time the organization was created."
                          }
                        }
                      },
                      "modified": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "string"
                          },
                          "format": {
                            "type": "string",
                            "example": "date-time"
                          },
                          "description": {
                            "type": "string",
                            "example": "The last time the organization was modified."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "orgNoTime": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "example": "object"
          },
          "properties": {
            "type": "object",
            "properties": {
              "name": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "string"
                  },
                  "description": {
                    "type": "string",
                    "example": "The name of the organization."
                  }
                }
              },
              "short_name": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "string"
                  },
                  "description": {
                    "type": "string",
                    "example": "The short name of the organization."
                  }
                }
              },
              "UUID": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "string"
                  },
                  "description": {
                    "type": "string",
                    "example": "The identifier of the organization."
                  }
                }
              },
              "policies": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "object"
                  },
                  "properties": {
                    "type": "object",
                    "properties": {
                      "id_quota": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "integer"
                          },
                          "format": {
                            "type": "string",
                            "example": "int32"
                          },
                          "description": {
                            "type": "string",
                            "example": "The number of CVE IDs the organization is allowed to have in the RESERVED state at one time."
                          }
                        }
                      }
                    }
                  }
                }
              },
              "authority": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "object"
                  },
                  "properties": {
                    "type": "object",
                    "properties": {
                      "active_roles": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "array"
                          },
                          "items": {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string",
                                "example": "string"
                              },
                              "description": {
                                "type": "string",
                                "example": "The active roles of the organization."
                              },
                              "enum": {
                                "type": "array",
                                "example": [
                                  "CNA",
                                  "SECRETARIAT",
                                  "ROOT_CNA",
                                  "ADP"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "orgAll200": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "example": "object"
          },
          "properties": {
            "type": "object",
            "properties": {
              "totalCount": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "integer"
                  },
                  "format": {
                    "type": "string",
                    "example": "int32"
                  },
                  "description": {
                    "type": "string",
                    "example": "Total CVE records found"
                  }
                }
              },
              "itemsPerPage": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "integer"
                  },
                  "format": {
                    "type": "string",
                    "example": "int32"
                  },
                  "description": {
                    "type": "string",
                    "example": "Number of CVE records in a page"
                  }
                }
              },
              "pageCount": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "integer"
                  },
                  "format": {
                    "type": "string",
                    "example": "int32"
                  },
                  "description": {
                    "type": "string",
                    "example": "Total number of pages"
                  }
                }
              },
              "currentPage": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "integer"
                  },
                  "format": {
                    "type": "string",
                    "example": "int32"
                  },
                  "description": {
                    "type": "string",
                    "example": "Current page"
                  }
                }
              },
              "prevPage": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "integer"
                  },
                  "format": {
                    "type": "string",
                    "example": "int32"
                  },
                  "description": {
                    "type": "string",
                    "example": "Previous page"
                  }
                }
              },
              "nextPage": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "integer"
                  },
                  "format": {
                    "type": "string",
                    "example": "int32"
                  },
                  "description": {
                    "type": "string",
                    "example": "Next page"
                  }
                }
              },
              "organizations": {
                "$ref": "#/components/schemas/arrayOfOrgs"
              }
            }
          }
        }
      },
      "updateOrg200": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "example": "object"
          },
          "properties": {
            "type": "object",
            "properties": {
              "message": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "string"
                  },
                  "description": {
                    "type": "string",
                    "example": "Success description"
                  }
                }
              },
              "updated": {
                "$ref": "#/components/schemas/org"
              }
            }
          }
        }
      },
      "userNoTimeSecret": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "example": "object"
          },
          "properties": {
            "type": "object",
            "properties": {
              "username": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "string"
                  },
                  "description": {
                    "type": "string",
                    "example": "The user name of the user."
                  }
                }
              },
              "org_UUID": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "string"
                  },
                  "description": {
                    "type": "string",
                    "example": "The identifier of the organization the user belongs to."
                  }
                }
              },
              "UUID": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "string"
                  },
                  "description": {
                    "type": "string",
                    "example": "The identifier of the user."
                  }
                }
              },
              "active": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "string"
                  },
                  "description": {
                    "type": "string",
                    "example": "The user is an active user of the organization."
                  }
                }
              },
              "name": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "object"
                  },
                  "properties": {
                    "type": "object",
                    "properties": {
                      "first": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "string"
                          },
                          "description": {
                            "type": "string",
                            "example": "The first name of the user."
                          }
                        }
                      },
                      "last": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "string"
                          },
                          "description": {
                            "type": "string",
                            "example": "The last name of the user."
                          }
                        }
                      },
                      "middle": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "string"
                          },
                          "description": {
                            "type": "string",
                            "example": "The middle name of the user, if any."
                          }
                        }
                      },
                      "suffix": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "string"
                          },
                          "description": {
                            "type": "string",
                            "example": "The suffix of the user, if any."
                          }
                        }
                      }
                    }
                  }
                }
              },
              "authority": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "object"
                  },
                  "properties": {
                    "type": "object",
                    "properties": {
                      "active_roles": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "array"
                          },
                          "items": {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string",
                                "example": "string"
                              },
                              "description": {
                                "type": "string",
                                "example": "The active roles of the user."
                              },
                              "enum": {
                                "type": "array",
                                "example": [
                                  "ADMIN"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "user": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "example": "object"
          },
          "properties": {
            "type": "object",
            "properties": {
              "username": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "string"
                  },
                  "description": {
                    "type": "string",
                    "example": "The user name of the user."
                  }
                }
              },
              "org_UUID": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "string"
                  },
                  "description": {
                    "type": "string",
                    "example": "The identifier of the organization the user belongs to."
                  }
                }
              },
              "UUID": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "string"
                  },
                  "description": {
                    "type": "string",
                    "example": "The identifier of the user."
                  }
                }
              },
              "active": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "string"
                  },
                  "description": {
                    "type": "string",
                    "example": "The user is an active user of the organization."
                  }
                }
              },
              "name": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "object"
                  },
                  "properties": {
                    "type": "object",
                    "properties": {
                      "first": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "string"
                          },
                          "description": {
                            "type": "string",
                            "example": "The first name of the user."
                          }
                        }
                      },
                      "last": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "string"
                          },
                          "description": {
                            "type": "string",
                            "example": "The last name of the user."
                          }
                        }
                      },
                      "middle": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "string"
                          },
                          "description": {
                            "type": "string",
                            "example": "The middle name of the user, if any."
                          }
                        }
                      },
                      "suffix": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "string"
                          },
                          "description": {
                            "type": "string",
                            "example": "The suffix of the user, if any."
                          }
                        }
                      }
                    }
                  }
                }
              },
              "secret": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "string"
                  },
                  "description": {
                    "type": "string",
                    "example": "The API key of the user."
                  }
                }
              },
              "authority": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "object"
                  },
                  "properties": {
                    "type": "object",
                    "properties": {
                      "active_roles": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "array"
                          },
                          "items": {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string",
                                "example": "string"
                              },
                              "description": {
                                "type": "string",
                                "example": "The active roles of the user."
                              },
                              "enum": {
                                "type": "array",
                                "example": [
                                  "ADMIN"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "time": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "object"
                  },
                  "properties": {
                    "type": "object",
                    "properties": {
                      "created": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "string"
                          },
                          "format": {
                            "type": "string",
                            "example": "date-time"
                          },
                          "description": {
                            "type": "string",
                            "example": "The time the user was created."
                          }
                        }
                      },
                      "modified": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "string"
                          },
                          "format": {
                            "type": "string",
                            "example": "date-time"
                          },
                          "description": {
                            "type": "string",
                            "example": "The last time the user was modified."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "userNoSecret": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "example": "object"
          },
          "properties": {
            "type": "object",
            "properties": {
              "username": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "string"
                  },
                  "description": {
                    "type": "string",
                    "example": "The user name of the user."
                  }
                }
              },
              "org_UUID": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "string"
                  },
                  "description": {
                    "type": "string",
                    "example": "The identifier of the organization the user belongs to."
                  }
                }
              },
              "UUID": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "string"
                  },
                  "description": {
                    "type": "string",
                    "example": "The identifier of the user."
                  }
                }
              },
              "active": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "string"
                  },
                  "description": {
                    "type": "string",
                    "example": "The user is an active user of the organization."
                  }
                }
              },
              "name": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "object"
                  },
                  "properties": {
                    "type": "object",
                    "properties": {
                      "first": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "string"
                          },
                          "description": {
                            "type": "string",
                            "example": "The first name of the user."
                          }
                        }
                      },
                      "last": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "string"
                          },
                          "description": {
                            "type": "string",
                            "example": "The last name of the user."
                          }
                        }
                      },
                      "middle": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "string"
                          },
                          "description": {
                            "type": "string",
                            "example": "The middle name of the user, if any."
                          }
                        }
                      },
                      "suffix": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "string"
                          },
                          "description": {
                            "type": "string",
                            "example": "The suffix of the user, if any."
                          }
                        }
                      }
                    }
                  }
                }
              },
              "authority": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "object"
                  },
                  "properties": {
                    "type": "object",
                    "properties": {
                      "active_roles": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "array"
                          },
                          "items": {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string",
                                "example": "string"
                              },
                              "description": {
                                "type": "string",
                                "example": "The active roles of the user."
                              },
                              "enum": {
                                "type": "array",
                                "example": [
                                  "ADMIN"
                                ],
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "time": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "object"
                  },
                  "properties": {
                    "type": "object",
                    "properties": {
                      "created": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "string"
                          },
                          "format": {
                            "type": "string",
                            "example": "date-time"
                          },
                          "description": {
                            "type": "string",
                            "example": "The time the user was created."
                          }
                        }
                      },
                      "modified": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "string"
                          },
                          "format": {
                            "type": "string",
                            "example": "date-time"
                          },
                          "description": {
                            "type": "string",
                            "example": "The last time the user was modified."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}