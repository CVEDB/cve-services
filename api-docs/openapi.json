{
  "openapi": "3.0.2",
  "info": {
    "version": "3.0.2",
    "title": "CVE Services API",
    "description": "The CVE services API which supports automation tooling for the CVE Project.",
    "contact": {
      "name": "CVE Services",
      "url": "https://cveawg-dev.mitre.org/api",
      "email": "cve-board-auto-list@mitre.org"
    }
  },
  "servers": [
    {
      "url": "https://cveawg-dev.mitre.org/api"
    }
  ],
  "paths": {
    "/cve-id": {
      "get": {
        "tags": [
          "CVE ID"
        ],
        "summary": "Retrieves all CVE IDs entity owns after applying the query params",
        "description": "  <h2>Access Control</h2>  <p>No roles needed to access the endpoint</p>  <h2>Expected Behavior</h2>  <p><b>Secretariat:</b> Can see CVE-IDs owned by any Organization</p>  <p><b>Admin User:</b> Can only see CVE-IDs owned by the Organization it belongs to</p>  <p><b>Regular User:</b> Can only see CVE-IDs owned by the Organization it belongs to</p>",
        "operationId": "cveIdGetFiltered",
        "parameters": [
          {
            "$ref": "#/components/parameters/cveIdGetFilteredState"
          },
          {
            "$ref": "#/components/parameters/cveIdGetFilteredCveIdYear"
          },
          {
            "$ref": "#/components/parameters/cveIdGetFilteredTimeReservedLt"
          },
          {
            "$ref": "#/components/parameters/cveIdGetFilteredTimeReservedGt"
          },
          {
            "$ref": "#/components/parameters/cveIdGetFilteredTimeModifiedLt"
          },
          {
            "$ref": "#/components/parameters/cveIdGetFilteredTimeModifiedGt"
          },
          {
            "$ref": "#/components/parameters/pageQuery"
          },
          {
            "$ref": "#/components/parameters/apiEntityHeader"
          },
          {
            "$ref": "#/components/parameters/apiUserHeader"
          },
          {
            "$ref": "#/components/parameters/apiSecretHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "A filtered list of CVE-ID records the organization owns given the query parameters.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/cveIdGetFiltered200"
                },
                "examples": {
                  "cveIdGetFiltered200": {
                    "$ref": "#/components/examples/cveIdGetFiltered200"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorBadInput"
                },
                "examples": {
                  "errorBadInput": {
                    "$ref": "#/components/examples/errorBadInput"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Not Authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorGeneric"
                },
                "examples": {
                  "errorGeneric": {
                    "$ref": "#/components/examples/errorGeneric"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorGeneric"
                },
                "examples": {
                  "errorGeneric": {
                    "$ref": "#/components/examples/errorGeneric"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorGeneric"
                },
                "examples": {
                  "errorGeneric": {
                    "$ref": "#/components/examples/errorGeneric"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorGeneric"
                },
                "examples": {
                  "errorGeneric": {
                    "$ref": "#/components/examples/internalServerError"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "CVE ID"
        ],
        "summary": "Reserves CVE-ID records for the organization provided in the short_name query parameter",
        "description": "  <h2>Access Control</h2>  <p>At least one of the following roles are needed to access the endpoint:</p>  <p>- <b>CNA:</b> The user must belong to an Organization with the “CNA” role</p>  <h2>Expected Behavior</h2>  <p><b>Secretariat:</b> Can reserve CVE-IDs for any Organization</p>  <p><b>CNA:</b> Can only reserve CVE-IDs for its Organization</p>",
        "operationId": "cveIdReserve",
        "parameters": [
          {
            "$ref": "#/components/parameters/amount"
          },
          {
            "$ref": "#/components/parameters/batch_type"
          },
          {
            "$ref": "#/components/parameters/cve_year"
          },
          {
            "$ref": "#/components/parameters/short_name"
          },
          {
            "$ref": "#/components/parameters/apiEntityHeader"
          },
          {
            "$ref": "#/components/parameters/apiUserHeader"
          },
          {
            "$ref": "#/components/parameters/apiSecretHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of the newly reserved CVE-IDs.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/arrayOfCveIdsNoTime"
                },
                "examples": {
                  "arrayOfCveIdsNoTime": {
                    "$ref": "#/components/examples/arrayOfCveIdsNoTime200"
                  }
                }
              }
            }
          },
          "206": {
            "description": "A partial list of the CVE-IDs the IDR service managed to reserve before encountering a case where no more CVE IDs could be reserved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorCveIds"
                },
                "examples": {
                  "errorCveIds": {
                    "$ref": "#/components/examples/errorCveIds206"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorBadInput"
                },
                "examples": {
                  "errorBadInput": {
                    "$ref": "#/components/examples/errorBadInput"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Not Authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorGeneric"
                },
                "examples": {
                  "errorGeneric": {
                    "$ref": "#/components/examples/errorGeneric"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorGeneric"
                },
                "examples": {
                  "errorGeneric": {
                    "$ref": "#/components/examples/errorGeneric"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorGeneric"
                },
                "examples": {
                  "errorGeneric": {
                    "$ref": "#/components/examples/errorGeneric"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorGeneric"
                },
                "examples": {
                  "errorGeneric": {
                    "$ref": "#/components/examples/internalServerError"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/cve-id/{id}": {
      "get": {
        "tags": [
          "CVE ID"
        ],
        "summary": "Retrieves a CVE-ID record by ID, can be a cve id the entity doesn't own if in a PUBLISHED or REJECTED state",
        "description": "  <h2>Access Control</h2>  <p>No roles needed to access the endpoint</p>  <h2>Expected Behavior</h2>  <p><b>Secretariat:</b> Can see the full information of a CVE-ID owned by any Organization</p>  <p><b>Admin User:</b> Can see full information of a CVE-ID owned by the Organization it belongs to, and can only see partial information of a CVE-ID in the “PUBLISHED” or “REJECTED” state that is owned by another Organization</p>  <p><b>Regular User:</b> Can see full information of a CVE-ID owned by the Organization it belongs to, and can only see partial information of a CVE-ID in the “PUBLISHED” or “REJECTED” state that is owned by another Organization</p>",
        "operationId": "cveIdGetSingle",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The CVE ID for which the record is being submitted."
          },
          {
            "$ref": "#/components/parameters/apiEntityHeader"
          },
          {
            "$ref": "#/components/parameters/apiUserHeader"
          },
          {
            "$ref": "#/components/parameters/apiSecretHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested CVE-ID record is returned.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/cveId"
                },
                "examples": {
                  "cveId": {
                    "$ref": "#/components/examples/cveId200"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorBadInput"
                },
                "examples": {
                  "errorBadInput": {
                    "$ref": "#/components/examples/errorBadInput"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Not Authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorGeneric"
                },
                "examples": {
                  "errorGeneric": {
                    "$ref": "#/components/examples/errorGeneric"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorGeneric"
                },
                "examples": {
                  "errorGeneric": {
                    "$ref": "#/components/examples/errorGeneric"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorGeneric"
                },
                "examples": {
                  "errorGeneric": {
                    "$ref": "#/components/examples/errorGeneric"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorGeneric"
                },
                "examples": {
                  "errorGeneric": {
                    "$ref": "#/components/examples/internalServerError"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "CVE ID"
        ],
        "summary": "Updates a CVE-ID record by ID",
        "description": "  <h2>Access Control</h2>  <p>At least one of the following roles are needed to access the endpoint:</p>  <p>- <b>SECRETARIAT:</b> The user must belong to an Organization with the “SECRETARIAT” role</p>  <h2>Expected Behavior</h2>  <p><b>Secretariat:</b> Can update a CVE-ID owned by any Organization</p>",
        "operationId": "cveIdUpdateSingle",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The CVE ID for which the record is being submitted."
          },
          {
            "$ref": "#/components/parameters/org"
          },
          {
            "$ref": "#/components/parameters/state"
          },
          {
            "$ref": "#/components/parameters/apiEntityHeader"
          },
          {
            "$ref": "#/components/parameters/apiUserHeader"
          },
          {
            "$ref": "#/components/parameters/apiSecretHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "The updated CVE-ID record is returned.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/cveId"
                },
                "examples": {
                  "cveId": {
                    "$ref": "#/components/examples/cveId200"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorBadInput"
                },
                "examples": {
                  "errorBadInput": {
                    "$ref": "#/components/examples/errorBadInput"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Not Authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorGeneric"
                },
                "examples": {
                  "errorGeneric": {
                    "$ref": "#/components/examples/errorGeneric"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorGeneric"
                },
                "examples": {
                  "errorGeneric": {
                    "$ref": "#/components/examples/errorGeneric"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorGeneric"
                },
                "examples": {
                  "errorGeneric": {
                    "$ref": "#/components/examples/errorGeneric"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorGeneric"
                },
                "examples": {
                  "errorGeneric": {
                    "$ref": "#/components/examples/internalServerError"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/cve-id-range/{year}": {
      "post": {
        "tags": [
          "CVE ID"
        ],
        "summary": "Updates a CVE-ID record by ID",
        "description": "  <h2>Access Control</h2>  <p>At least one of the following roles are needed to access the endpoint:</p>  <p>- <b>SECRETARIAT:</b> The user must belong to an Organization with the “SECRETARIAT” role</p>  <h2>Expected Behavior</h2>  <p><b>Secretariat:</b> Can create a CVE-ID-Range record for the specified year</p>",
        "operationId": "cveIdRangeCreate",
        "parameters": [
          {
            "name": "year",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "The year of the CVE-ID-Range record."
          },
          {
            "$ref": "#/components/parameters/apiEntityHeader"
          },
          {
            "$ref": "#/components/parameters/apiUserHeader"
          },
          {
            "$ref": "#/components/parameters/apiSecretHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "The CVE-ID-Range entity was created."
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorBadInput"
                },
                "examples": {
                  "errorBadInput": {
                    "$ref": "#/components/examples/errorBadInput"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Not Authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorGeneric"
                },
                "examples": {
                  "errorGeneric": {
                    "$ref": "#/components/examples/errorGeneric"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorGeneric"
                },
                "examples": {
                  "errorGeneric": {
                    "$ref": "#/components/examples/errorGeneric"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorGeneric"
                },
                "examples": {
                  "errorGeneric": {
                    "$ref": "#/components/examples/errorGeneric"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorGeneric"
                },
                "examples": {
                  "errorGeneric": {
                    "$ref": "#/components/examples/internalServerError"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/cve/{id}": {
      "get": {
        "tags": [
          "CVE Record"
        ],
        "summary": "Returns a CVE record by CVE ID (This endpoint can only be used by the Secretariat.)",
        "description": "  <h2>Access Control</h2>  <p>At least one of the following roles are needed to access the endpoint:</p>  <p>- <b>SECRETARIAT:</b> The user must belong to an Organization with the “SECRETARIAT” role</p>  <h2>Expected Behavior</h2>  <p><b>Secretariat:</b> Can see a CVE record owned by any Organization</p>",
        "operationId": "cveGetSingle",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The CVE ID for the record to be retrieved."
          },
          {
            "$ref": "#/components/parameters/apiEntityHeader"
          },
          {
            "$ref": "#/components/parameters/apiUserHeader"
          },
          {
            "$ref": "#/components/parameters/apiSecretHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested CVE record is returned.",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "https://raw.githubusercontent.com/CVEProject/cve-schema/master/schema/v4.0/CVE_JSON_4.0_min_public.schema"
                    },
                    {
                      "$ref": "https://raw.githubusercontent.com/CVEProject/cve-schema/master/schema/v4.0/CVE_JSON_4.0_min_reject.schema"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorBadInput"
                },
                "examples": {
                  "errorBadInput": {
                    "$ref": "#/components/examples/errorBadInput"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Not Authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorGeneric"
                },
                "examples": {
                  "errorGeneric": {
                    "$ref": "#/components/examples/errorGeneric"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorGeneric"
                },
                "examples": {
                  "errorGeneric": {
                    "$ref": "#/components/examples/errorGeneric"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorGeneric"
                },
                "examples": {
                  "errorGeneric": {
                    "$ref": "#/components/examples/errorGeneric"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorGeneric"
                },
                "examples": {
                  "errorGeneric": {
                    "$ref": "#/components/examples/internalServerError"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "CVE Record"
        ],
        "summary": "Creates a CVE Record by ID (This endpoint can only be used by the Secretariat.)",
        "description": "  This endpoint is an internal admin endpoint restricted to the Secretariat.  <h2>Access Control</h2>  <p>At least one of the following roles are needed to access the endpoint:</p>  <p>- <b>SECRETARIAT:</b> The user must belong to an Organization with the “SECRETARIAT” role</p>  <h2>Expected Behavior</h2>  <p><b>Secretariat:</b> Can create a CVE record owned by any Organization</p>",
        "operationId": "cveSubmit",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The CVE ID for which the record is being submitted."
          },
          {
            "$ref": "#/components/parameters/apiEntityHeader"
          },
          {
            "$ref": "#/components/parameters/apiUserHeader"
          },
          {
            "$ref": "#/components/parameters/apiSecretHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested CVE record is returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Success description"
                    },
                    "created": {
                      "type": "object",
                      "anyOf": [
                        {
                          "$ref": "https://raw.githubusercontent.com/CVEProject/cve-schema/master/schema/v4.0/CVE_JSON_4.0_min_public.schema"
                        },
                        {
                          "$ref": "https://raw.githubusercontent.com/CVEProject/cve-schema/master/schema/v4.0/CVE_JSON_4.0_min_reject.schema"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorBadInput"
                },
                "examples": {
                  "errorBadInput": {
                    "$ref": "#/components/examples/errorBadInput"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Not Authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorGeneric"
                },
                "examples": {
                  "errorGeneric": {
                    "$ref": "#/components/examples/errorGeneric"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorGeneric"
                },
                "examples": {
                  "errorGeneric": {
                    "$ref": "#/components/examples/errorGeneric"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorGeneric"
                },
                "examples": {
                  "errorGeneric": {
                    "$ref": "#/components/examples/errorGeneric"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorGeneric"
                },
                "examples": {
                  "errorGeneric": {
                    "$ref": "#/components/examples/internalServerError"
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "anyOf": [
                  {
                    "$ref": "https://raw.githubusercontent.com/CVEProject/cve-schema/master/schema/v4.0/CVE_JSON_4.0_min_public.schema"
                  },
                  {
                    "$ref": "https://raw.githubusercontent.com/CVEProject/cve-schema/master/schema/v4.0/CVE_JSON_4.0_min_public.schema"
                  }
                ]
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "CVE Record"
        ],
        "summary": "Updates a CVE Record by ID (This endpoint can only be used by the Secretariat.)",
        "description": "  This endpoint is an internal admin endpoint restricted to the Secretariat.  <h2>Access Control</h2>  <p>At least one of the following roles are needed to access the endpoint:</p>  <p>- <b>SECRETARIAT:</b> The user must belong to an Organization with the “SECRETARIAT” role</p>  <h2>Expected Behavior</h2>  <p><b>Secretariat:</b> Can update a CVE record owned by any Organization</p>",
        "operationId": "cveUpdateSingle",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The CVE ID for which the record is being updated."
          },
          {
            "$ref": "#/components/parameters/apiEntityHeader"
          },
          {
            "$ref": "#/components/parameters/apiUserHeader"
          },
          {
            "$ref": "#/components/parameters/apiSecretHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the CVE record updated.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Success description"
                    },
                    "updated": {
                      "type": "object",
                      "anyOf": [
                        {
                          "$ref": "https://raw.githubusercontent.com/CVEProject/cve-schema/master/schema/v4.0/CVE_JSON_4.0_min_public.schema"
                        },
                        {
                          "$ref": "https://raw.githubusercontent.com/CVEProject/cve-schema/master/schema/v4.0/CVE_JSON_4.0_min_reject.schema"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorBadInput"
                },
                "examples": {
                  "errorBadInput": {
                    "$ref": "#/components/examples/errorBadInput"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Not Authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorGeneric"
                },
                "examples": {
                  "errorGeneric": {
                    "$ref": "#/components/examples/errorGeneric"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorGeneric"
                },
                "examples": {
                  "errorGeneric": {
                    "$ref": "#/components/examples/errorGeneric"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorGeneric"
                },
                "examples": {
                  "errorGeneric": {
                    "$ref": "#/components/examples/errorGeneric"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorGeneric"
                },
                "examples": {
                  "errorGeneric": {
                    "$ref": "#/components/examples/internalServerError"
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "anyOf": [
                  {
                    "$ref": "/schemas/cve-record-minimum.json"
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/cve": {
      "get": {
        "tags": [
          "CVE Record"
        ],
        "summary": "Retrieves all CVE records (This endpoint can only be used by the Secretariat.)",
        "description": "  This endpoint is an internal admin endpoint restricted to the Secretariat.  <h2>Access Control</h2>  <p>At least one of the following roles are needed to access the endpoint:</p>  <p>- <b>SECRETARIAT:</b> The user must belong to an Organization with the “SECRETARIAT” role</p>  <h2>Expected Behavior</h2>  <p><b>Secretariat:</b> Can see all CVE records owned by any Organization</p>",
        "operationId": "cveGetFiltered",
        "parameters": [
          {
            "$ref": "#/components/parameters/cveRecordFilteredTimeModifiedLt"
          },
          {
            "$ref": "#/components/parameters/cveRecordFilteredTimeModifiedGt"
          },
          {
            "$ref": "#/components/parameters/cveState"
          },
          {
            "$ref": "#/components/parameters/countOnly"
          },
          {
            "$ref": "#/components/parameters/assignerShortName"
          },
          {
            "$ref": "#/components/parameters/assigner"
          },
          {
            "$ref": "#/components/parameters/apiEntityHeader"
          },
          {
            "$ref": "#/components/parameters/apiUserHeader"
          },
          {
            "$ref": "#/components/parameters/apiSecretHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of CVE records and pagination fields, only allowed by the Secretariat.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "totalCount": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Total CVE records found"
                    },
                    "itemsPerPage": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Number of CVE records in a page"
                    },
                    "pageCount": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Total number of pages"
                    },
                    "currentPage": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Current page"
                    },
                    "prevPage": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Previous page"
                    },
                    "nextPage": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Next page"
                    },
                    "cveRecords": {
                      "type": "object",
                      "anyOf": [
                        {
                          "$ref": "https://raw.githubusercontent.com/CVEProject/cve-schema/master/schema/v4.0/CVE_JSON_4.0_min_public.schema"
                        },
                        {
                          "$ref": "https://raw.githubusercontent.com/CVEProject/cve-schema/master/schema/v4.0/CVE_JSON_4.0_min_reject.schema"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorBadInput"
                },
                "examples": {
                  "errorBadInput": {
                    "$ref": "#/components/examples/errorBadInput"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Not Authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorGeneric"
                },
                "examples": {
                  "errorGeneric": {
                    "$ref": "#/components/examples/errorGeneric"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorGeneric"
                },
                "examples": {
                  "errorGeneric": {
                    "$ref": "#/components/examples/errorGeneric"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorGeneric"
                },
                "examples": {
                  "errorGeneric": {
                    "$ref": "#/components/examples/errorGeneric"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorGeneric"
                },
                "examples": {
                  "errorGeneric": {
                    "$ref": "#/components/examples/internalServerError"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/cve/{id}/cna": {
      "post": {
        "tags": [
          "CVE Record"
        ],
        "summary": "Creates a CVE Record by ID (This endpoint is to be used by CNAs.)",
        "description": "  <h2>Access Control</h2>  <p>No roles needed to access the endpoint</p>  <h2>Expected Behavior</h2>  <p><b>Admin User:</b> Can submit CVE records for CVE IDs that are owned by the organization</p>  <p><b>Regular User:</b> Can submit CVE records for CVE IDs that are owned by the organization</p>",
        "operationId": "cveCnaCreateSingle",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The CVE ID for which the record is being created."
          },
          {
            "$ref": "#/components/parameters/apiEntityHeader"
          },
          {
            "$ref": "#/components/parameters/apiUserHeader"
          },
          {
            "$ref": "#/components/parameters/apiSecretHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "The created CVE record is returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Success description"
                    },
                    "created": {
                      "type": "object",
                      "anyOf": [
                        {
                          "$ref": "https://raw.githubusercontent.com/CVEProject/cve-schema/master/schema/v4.0/CVE_JSON_4.0_min_public.schema"
                        },
                        {
                          "$ref": "https://raw.githubusercontent.com/CVEProject/cve-schema/master/schema/v4.0/CVE_JSON_4.0_min_reject.schema"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorBadInput"
                },
                "examples": {
                  "errorBadInput": {
                    "$ref": "#/components/examples/errorBadInput"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Not Authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorGeneric"
                },
                "examples": {
                  "errorGeneric": {
                    "$ref": "#/components/examples/errorGeneric"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorGeneric"
                },
                "examples": {
                  "errorGeneric": {
                    "$ref": "#/components/examples/errorGeneric"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorGeneric"
                },
                "examples": {
                  "errorGeneric": {
                    "$ref": "#/components/examples/errorGeneric"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorGeneric"
                },
                "examples": {
                  "errorGeneric": {
                    "$ref": "#/components/examples/internalServerError"
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "anyOf": [
                  {
                    "$ref": "https://raw.githubusercontent.com/CVEProject/cve-schema/master/schema/v4.0/CVE_JSON_4.0_min_public.schema"
                  },
                  {
                    "$ref": "https://raw.githubusercontent.com/CVEProject/cve-schema/master/schema/v4.0/CVE_JSON_4.0_min_public.schema"
                  }
                ]
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "CVE Record"
        ],
        "summary": "Update a CVE Record by ID (This endpoint is to be used by CNAs.)",
        "description": "  <h2>Access Control</h2>  <p>No roles needed to access the endpoint</p>  <h2>Expected Behavior</h2>  <p><b>Admin User:</b> Can submit CVE records for CVE IDs that are owned by the organization</p>  <p><b>Regular User:</b> Can submit CVE records for CVE IDs that are owned by the organization</p>",
        "operationId": "cveCnaUpdateSingle",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The CVE ID for which the record is being updated."
          },
          {
            "$ref": "#/components/parameters/apiEntityHeader"
          },
          {
            "$ref": "#/components/parameters/apiUserHeader"
          },
          {
            "$ref": "#/components/parameters/apiSecretHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the CVE record updated.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Success description"
                    },
                    "updated": {
                      "type": "object",
                      "anyOf": [
                        {
                          "$ref": "https://raw.githubusercontent.com/CVEProject/cve-schema/master/schema/v4.0/CVE_JSON_4.0_min_public.schema"
                        },
                        {
                          "$ref": "https://raw.githubusercontent.com/CVEProject/cve-schema/master/schema/v4.0/CVE_JSON_4.0_min_reject.schema"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorBadInput"
                },
                "examples": {
                  "errorBadInput": {
                    "$ref": "#/components/examples/errorBadInput"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Not Authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorGeneric"
                },
                "examples": {
                  "errorGeneric": {
                    "$ref": "#/components/examples/errorGeneric"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorGeneric"
                },
                "examples": {
                  "errorGeneric": {
                    "$ref": "#/components/examples/errorGeneric"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorGeneric"
                },
                "examples": {
                  "errorGeneric": {
                    "$ref": "#/components/examples/errorGeneric"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorGeneric"
                },
                "examples": {
                  "errorGeneric": {
                    "$ref": "#/components/examples/internalServerError"
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "anyOf": [
                  {
                    "$ref": "https://raw.githubusercontent.com/CVEProject/cve-schema/master/schema/v4.0/CVE_JSON_4.0_min_public.schema"
                  },
                  {
                    "$ref": "https://raw.githubusercontent.com/CVEProject/cve-schema/master/schema/v4.0/CVE_JSON_4.0_min_public.schema"
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/cve/{id}/reject": {
      "post": {
        "tags": [
          "CVE Record"
        ],
        "summary": "Create a CVE Record rejection by ID (This endpoint is to be used by CNAs.)",
        "description": "  <h2>Access Control</h2>  <p>No roles needed to access the endpoint</p>  <h2>Expected Behavior</h2>  <p><b>Admin User:</b> Can submit CVE records for CVE IDs that are owned by the organization</p>  <p><b>Regular User:</b> Can submit CVE records for CVE IDs that are owned by the organization</p>",
        "operationId": "cveCnaCreateReject",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The CVE ID for which the record is being rejected."
          },
          {
            "$ref": "#/components/parameters/apiEntityHeader"
          },
          {
            "$ref": "#/components/parameters/apiUserHeader"
          },
          {
            "$ref": "#/components/parameters/apiSecretHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the CVE record updated.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Success description"
                    },
                    "updated": {
                      "type": "object",
                      "anyOf": [
                        {
                          "$ref": "https://raw.githubusercontent.com/CVEProject/cve-schema/master/schema/v4.0/CVE_JSON_4.0_min_public.schema"
                        },
                        {
                          "$ref": "https://raw.githubusercontent.com/CVEProject/cve-schema/master/schema/v4.0/CVE_JSON_4.0_min_reject.schema"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorBadInput"
                },
                "examples": {
                  "errorBadInput": {
                    "$ref": "#/components/examples/errorBadInput"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Not Authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorGeneric"
                },
                "examples": {
                  "errorGeneric": {
                    "$ref": "#/components/examples/errorGeneric"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorGeneric"
                },
                "examples": {
                  "errorGeneric": {
                    "$ref": "#/components/examples/errorGeneric"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorGeneric"
                },
                "examples": {
                  "errorGeneric": {
                    "$ref": "#/components/examples/errorGeneric"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorGeneric"
                },
                "examples": {
                  "errorGeneric": {
                    "$ref": "#/components/examples/internalServerError"
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "anyOf": [
                  {
                    "$ref": "https://raw.githubusercontent.com/CVEProject/cve-schema/master/schema/v4.0/CVE_JSON_4.0_min_public.schema"
                  },
                  {
                    "$ref": "https://raw.githubusercontent.com/CVEProject/cve-schema/master/schema/v4.0/CVE_JSON_4.0_min_public.schema"
                  }
                ]
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "CVE Record"
        ],
        "summary": "Update a CVE Record rejection by ID (This endpoint is to be used by CNAs.)",
        "description": "  <h2>Access Control</h2>  <p>No roles needed to access the endpoint</p>  <h2>Expected Behavior</h2>  <p><b>Admin User:</b> Can submit CVE records for CVE IDs that are owned by the organization</p>  <p><b>Regular User:</b> Can submit CVE records for CVE IDs that are owned by the organization</p>",
        "operationId": "cveCnaUpdateReject",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The CVE ID for which the record is being rejected."
          },
          {
            "$ref": "#/components/parameters/apiEntityHeader"
          },
          {
            "$ref": "#/components/parameters/apiUserHeader"
          },
          {
            "$ref": "#/components/parameters/apiSecretHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the CVE record updated.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Success description"
                    },
                    "updated": {
                      "type": "object",
                      "anyOf": [
                        {
                          "$ref": "https://raw.githubusercontent.com/CVEProject/cve-schema/master/schema/v4.0/CVE_JSON_4.0_min_public.schema"
                        },
                        {
                          "$ref": "https://raw.githubusercontent.com/CVEProject/cve-schema/master/schema/v4.0/CVE_JSON_4.0_min_reject.schema"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorBadInput"
                },
                "examples": {
                  "errorBadInput": {
                    "$ref": "#/components/examples/errorBadInput"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Not Authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorGeneric"
                },
                "examples": {
                  "errorGeneric": {
                    "$ref": "#/components/examples/errorGeneric"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorGeneric"
                },
                "examples": {
                  "errorGeneric": {
                    "$ref": "#/components/examples/errorGeneric"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorGeneric"
                },
                "examples": {
                  "errorGeneric": {
                    "$ref": "#/components/examples/errorGeneric"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorGeneric"
                },
                "examples": {
                  "errorGeneric": {
                    "$ref": "#/components/examples/internalServerError"
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "anyOf": [
                  {
                    "$ref": "https://raw.githubusercontent.com/CVEProject/cve-schema/master/schema/v4.0/CVE_JSON_4.0_min_public.schema"
                  },
                  {
                    "$ref": "https://raw.githubusercontent.com/CVEProject/cve-schema/master/schema/v4.0/CVE_JSON_4.0_min_public.schema"
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/org": {
      "get": {
        "tags": [
          "Organization"
        ],
        "summary": "Retrieves all organization records",
        "description": "  <h2>Access Control</h2>  <p>At least one of the following roles are needed to access the endpoint:</p>  <p>- <b>SECRETARIAT:</b> The user must belong to an Organization with the “SECRETARIAT” role</p>  <h2>Expected Behavior</h2>  <p><b>Secretariat:</b> Can see the information of all Organizations</p>",
        "operationId": "orgAll",
        "parameters": [
          {
            "$ref": "#/components/parameters/pageQuery"
          },
          {
            "$ref": "#/components/parameters/apiEntityHeader"
          },
          {
            "$ref": "#/components/parameters/apiUserHeader"
          },
          {
            "$ref": "#/components/parameters/apiSecretHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns all organization records.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/orgAll200"
                },
                "examples": {
                  "orgAll200": {
                    "$ref": "#/components/examples/orgAll200"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorBadInput"
                },
                "examples": {
                  "errorBadInput": {
                    "$ref": "#/components/examples/errorBadInput"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Not Authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorGeneric"
                },
                "examples": {
                  "errorGeneric": {
                    "$ref": "#/components/examples/errorGeneric"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorGeneric"
                },
                "examples": {
                  "errorGeneric": {
                    "$ref": "#/components/examples/errorGeneric"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorGeneric"
                },
                "examples": {
                  "errorGeneric": {
                    "$ref": "#/components/examples/errorGeneric"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorGeneric"
                },
                "examples": {
                  "errorGeneric": {
                    "$ref": "#/components/examples/internalServerError"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Organization"
        ],
        "summary": "Creates an organization record",
        "description": "  <h2>Access Control</h2>  <p>At least one of the following roles are needed to access the endpoint:</p>  <p>- <b>SECRETARIAT:</b> The user must belong to an Organization with the “SECRETARIAT” role</p>  <h2>Expected Behavior</h2>  <p><b>Secretariat:</b> Can create any Organization record</p>  ",
        "operationId": "orgCreateSingle",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiEntityHeader"
          },
          {
            "$ref": "#/components/parameters/apiUserHeader"
          },
          {
            "$ref": "#/components/parameters/apiSecretHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the organization record created.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/createOrg200"
                },
                "examples": {
                  "createOrg200": {
                    "$ref": "#/components/examples/createOrg200"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorBadInput"
                },
                "examples": {
                  "errorBadInput": {
                    "$ref": "#/components/examples/errorBadInput"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Not Authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorGeneric"
                },
                "examples": {
                  "errorGeneric": {
                    "$ref": "#/components/examples/errorGeneric"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorGeneric"
                },
                "examples": {
                  "errorGeneric": {
                    "$ref": "#/components/examples/errorGeneric"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorGeneric"
                },
                "examples": {
                  "errorGeneric": {
                    "$ref": "#/components/examples/errorGeneric"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorGeneric"
                },
                "examples": {
                  "errorGeneric": {
                    "$ref": "#/components/examples/internalServerError"
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/createOrgRequestBody"
              },
              "examples": {
                "createOrgRequestBody": {
                  "$ref": "#/components/examples/createOrgRequestBody"
                }
              }
            }
          }
        }
      }
    },
    "/org/{identifier}": {
      "get": {
        "tags": [
          "Organization"
        ],
        "summary": "Retrieve an organization's data given the identifier, which can be their short name or the organization's uuid.",
        "description": "  <h2>Access Control</h2>  <p>No roles needed to access the endpoint</p>  <h2>Expected Behavior</h2>  <p><b>Secretariat:</b> Can see the information of any Organization</p>  <p><b>Admin User:</b> Can only see the information of the Organization it belongs to</p>  <p><b>Regular User:</b> Can only see the information of the Organization it belongs to</p>  ",
        "operationId": "orgSingle",
        "parameters": [
          {
            "name": "identifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The short name or UUID of the organization"
          },
          {
            "$ref": "#/components/parameters/apiEntityHeader"
          },
          {
            "$ref": "#/components/parameters/apiUserHeader"
          },
          {
            "$ref": "#/components/parameters/apiSecretHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the organization record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/org"
                },
                "examples": {
                  "org": {
                    "$ref": "#/components/examples/org200"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorBadInput"
                },
                "examples": {
                  "errorBadInput": {
                    "$ref": "#/components/examples/errorBadInput"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Not Authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorGeneric"
                },
                "examples": {
                  "errorGeneric": {
                    "$ref": "#/components/examples/errorGeneric"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorGeneric"
                },
                "examples": {
                  "errorGeneric": {
                    "$ref": "#/components/examples/errorGeneric"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorGeneric"
                },
                "examples": {
                  "errorGeneric": {
                    "$ref": "#/components/examples/errorGeneric"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorGeneric"
                },
                "examples": {
                  "errorGeneric": {
                    "$ref": "#/components/examples/internalServerError"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/org/{shortname}": {
      "put": {
        "tags": [
          "Organization"
        ],
        "summary": "Update an organization record",
        "description": "  <h2>Access Control</h2>  <p>At least one of the following roles are needed to access the endpoint:</p>  <p>- <b>SECRETARIAT:</b> The user must belong to an Organization with the “SECRETARIAT” role to access the endpoint</p>  <h2>Expected Behavior</h2>  <p><b>Secretariat:</b> Can update the information of any Organization</p>",
        "operationId": "orgUpdateSingle",
        "parameters": [
          {
            "name": "shortname",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The short name of the organization."
          },
          {
            "$ref": "#/components/parameters/id_quota"
          },
          {
            "$ref": "#/components/parameters/name"
          },
          {
            "$ref": "#/components/parameters/active_roles_add"
          },
          {
            "$ref": "#/components/parameters/active_roles_remove"
          },
          {
            "$ref": "#/components/parameters/apiEntityHeader"
          },
          {
            "$ref": "#/components/parameters/apiUserHeader"
          },
          {
            "$ref": "#/components/parameters/apiSecretHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the organization record updated.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/updateOrg200"
                },
                "examples": {
                  "updateOrg200": {
                    "$ref": "#/components/examples/updateOrg200"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorBadInput"
                },
                "examples": {
                  "errorBadInput": {
                    "$ref": "#/components/examples/errorBadInput"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Not Authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorGeneric"
                },
                "examples": {
                  "errorGeneric": {
                    "$ref": "#/components/examples/errorGeneric"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorGeneric"
                },
                "examples": {
                  "errorGeneric": {
                    "$ref": "#/components/examples/errorGeneric"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorGeneric"
                },
                "examples": {
                  "errorGeneric": {
                    "$ref": "#/components/examples/errorGeneric"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorGeneric"
                },
                "examples": {
                  "errorGeneric": {
                    "$ref": "#/components/examples/internalServerError"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/org/{shortname}/users": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Retrieve all user records specified by the short name of the organization",
        "description": "  <h2>Access Control</h2>  <p>No roles needed to access the endpoint</p>  <h2>Expected Behavior</h2>  <p><b>Secretariat:</b> Can see the information of all users of any Organization</p>  <p><b>Admin User:</b> Can only see the information of users that belongs to the same Organization</p>  <p><b>Regular User:</b> Can only see the information of users that belongs to the same Organization</p>",
        "operationId": "userOrgAll",
        "parameters": [
          {
            "name": "shortname",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The short name of the organization."
          },
          {
            "$ref": "#/components/parameters/pageQuery"
          },
          {
            "$ref": "#/components/parameters/apiEntityHeader"
          },
          {
            "$ref": "#/components/parameters/apiUserHeader"
          },
          {
            "$ref": "#/components/parameters/apiSecretHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns all user records for the organization.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/userOrgAll200"
                },
                "examples": {
                  "userOrgAll200": {
                    "$ref": "#/components/examples/userOrgAll200"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorBadInput"
                },
                "examples": {
                  "errorBadInput": {
                    "$ref": "#/components/examples/errorBadInput"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Not Authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorGeneric"
                },
                "examples": {
                  "errorGeneric": {
                    "$ref": "#/components/examples/errorGeneric"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorGeneric"
                },
                "examples": {
                  "errorGeneric": {
                    "$ref": "#/components/examples/errorGeneric"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorGeneric"
                },
                "examples": {
                  "errorGeneric": {
                    "$ref": "#/components/examples/errorGeneric"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorGeneric"
                },
                "examples": {
                  "errorGeneric": {
                    "$ref": "#/components/examples/internalServerError"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/org/{shortname}/user": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Create a user record with the provided short name as the owning organization",
        "description": "  <h2>Access Control</h2>  <p>At least one of the following roles are needed to access the endpoint:</p>  <p>- <b>SECRETARIAT:</b> The user must belong to an Organization with the “SECRETARIAT” role</p>  <p>- <b>ADMIN:</b> The user must have the “ADMIN” role and must belong to the same Organization as the new user</p>  <h2>Expected Behavior</h2>  <p><b>Secretariat:</b> Can create a user record for any Organization</p>  <p><b>Admin User:</b> Can only create a user record for users that belongs to the same Organization</p>",
        "operationId": "userCreateSingle",
        "parameters": [
          {
            "name": "shortname",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The short name of the organization."
          },
          {
            "$ref": "#/components/parameters/pageQuery"
          },
          {
            "$ref": "#/components/parameters/apiEntityHeader"
          },
          {
            "$ref": "#/components/parameters/apiUserHeader"
          },
          {
            "$ref": "#/components/parameters/apiSecretHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the created user record (with the secret).",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/createUser200"
                },
                "examples": {
                  "createUser200": {
                    "$ref": "#/components/examples/createUser200"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorBadInput"
                },
                "examples": {
                  "errorBadInput": {
                    "$ref": "#/components/examples/errorBadInput"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Not Authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorGeneric"
                },
                "examples": {
                  "errorGeneric": {
                    "$ref": "#/components/examples/errorGeneric"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorGeneric"
                },
                "examples": {
                  "errorGeneric": {
                    "$ref": "#/components/examples/errorGeneric"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorGeneric"
                },
                "examples": {
                  "errorGeneric": {
                    "$ref": "#/components/examples/errorGeneric"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorGeneric"
                },
                "examples": {
                  "errorGeneric": {
                    "$ref": "#/components/examples/internalServerError"
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/createUserRequestBody"
              },
              "examples": {
                "createUserRequestBody": {
                  "$ref": "#/components/examples/createUserRequestBody"
                }
              }
            }
          }
        }
      }
    },
    "/org/{shortname}/user/{username}": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Retrieve a user record",
        "description": "  <h2>Access Control</h2>  <p>No roles needed to access the endpoint</p>  <h2>Expected Behavior</h2>  <p><b>Secretariat:</b> Can see the information of a user of any Organization</p>  <p><b>Admin User:</b> Can only see the information of a user that belongs to the same Organization</p>  <p><b>Regular User:</b> Can only see the information of a user that belongs to the same Organization</p>",
        "operationId": "userSingle",
        "parameters": [
          {
            "name": "shortname",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The short name of the organization."
          },
          {
            "name": "username",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The user name of the user."
          },
          {
            "$ref": "#/components/parameters/apiEntityHeader"
          },
          {
            "$ref": "#/components/parameters/apiUserHeader"
          },
          {
            "$ref": "#/components/parameters/apiSecretHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns user record details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/userNoSecret"
                },
                "examples": {
                  "userNoSecret": {
                    "$ref": "#/components/examples/userNoSecret"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorBadInput"
                },
                "examples": {
                  "errorBadInput": {
                    "$ref": "#/components/examples/errorBadInput"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Not Authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorGeneric"
                },
                "examples": {
                  "errorGeneric": {
                    "$ref": "#/components/examples/errorGeneric"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorGeneric"
                },
                "examples": {
                  "errorGeneric": {
                    "$ref": "#/components/examples/errorGeneric"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorGeneric"
                },
                "examples": {
                  "errorGeneric": {
                    "$ref": "#/components/examples/errorGeneric"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorGeneric"
                },
                "examples": {
                  "errorGeneric": {
                    "$ref": "#/components/examples/internalServerError"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Users"
        ],
        "summary": "Retrieve a user record",
        "description": "  <h2>Access Control</h2>  <p>No roles needed to access the endpoint</p>  <h2>Expected Behavior</h2>  <p><b>Secretariat:</b> Can update a user record for any Organization</p>  <p><b>Admin User:</b> Can only update a user record for users that belongs to the same Organization</p>  <p><b>Regular User:</b> Can only update its own user record</p>",
        "operationId": "userUpdateSingle",
        "parameters": [
          {
            "name": "shortname",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The short name of the organization."
          },
          {
            "name": "username",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The user name of the user."
          },
          {
            "$ref": "#/components/parameters/active"
          },
          {
            "$ref": "#/components/parameters/activeUserRolesAdd"
          },
          {
            "$ref": "#/components/parameters/activeUserRolesRemove"
          },
          {
            "$ref": "#/components/parameters/nameFirst"
          },
          {
            "$ref": "#/components/parameters/nameLast"
          },
          {
            "$ref": "#/components/parameters/nameMiddle"
          },
          {
            "$ref": "#/components/parameters/nameSuffix"
          },
          {
            "$ref": "#/components/parameters/newUsername"
          },
          {
            "$ref": "#/components/parameters/orgShortname"
          },
          {
            "$ref": "#/components/parameters/apiEntityHeader"
          },
          {
            "$ref": "#/components/parameters/apiUserHeader"
          },
          {
            "$ref": "#/components/parameters/apiSecretHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the updated user record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/updatedUser200"
                },
                "examples": {
                  "updatedUser200": {
                    "$ref": "#/components/examples/updatedUser200"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorBadInput"
                },
                "examples": {
                  "errorBadInput": {
                    "$ref": "#/components/examples/errorBadInput"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Not Authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorGeneric"
                },
                "examples": {
                  "errorGeneric": {
                    "$ref": "#/components/examples/errorGeneric"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorGeneric"
                },
                "examples": {
                  "errorGeneric": {
                    "$ref": "#/components/examples/errorGeneric"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorGeneric"
                },
                "examples": {
                  "errorGeneric": {
                    "$ref": "#/components/examples/errorGeneric"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorGeneric"
                },
                "examples": {
                  "errorGeneric": {
                    "$ref": "#/components/examples/internalServerError"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/org/{shortname}/user/{username}/reset_secret": {
      "put": {
        "tags": [
          "Users"
        ],
        "summary": "Reset the API key of the user",
        "description": "  <h2>Access Control</h2>  <p>No roles needed to access the endpoint</p>  <h2>Expected Behavior</h2>  <p><b>Secretariat:</b> Can reset the API secret of any user</p>  <p><b>Admin User:</b> Can only reset the API secret of users that belong to the same Organization</p>  <p><b>Regular User:</b> Can only reset its own API secret</p>",
        "operationId": "userResetSecret",
        "parameters": [
          {
            "name": "shortname",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The short name of the organization."
          },
          {
            "name": "username",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The user name of the user."
          },
          {
            "$ref": "#/components/parameters/apiEntityHeader"
          },
          {
            "$ref": "#/components/parameters/apiUserHeader"
          },
          {
            "$ref": "#/components/parameters/apiSecretHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the new API key.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiSecret"
                },
                "examples": {
                  "apiSecret": {
                    "$ref": "#/components/examples/apiSecret"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorBadInput"
                },
                "examples": {
                  "errorBadInput": {
                    "$ref": "#/components/examples/errorBadInput"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Not Authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorGeneric"
                },
                "examples": {
                  "errorGeneric": {
                    "$ref": "#/components/examples/errorGeneric"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorGeneric"
                },
                "examples": {
                  "errorGeneric": {
                    "$ref": "#/components/examples/errorGeneric"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorGeneric"
                },
                "examples": {
                  "errorGeneric": {
                    "$ref": "#/components/examples/errorGeneric"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorGeneric"
                },
                "examples": {
                  "errorGeneric": {
                    "$ref": "#/components/examples/internalServerError"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/org/{shortname}/id_quota": {
      "get": {
        "tags": [
          "Organization"
        ],
        "summary": "Retrieves the details about the CVE ID quota information of an organization",
        "description": "  <h2>Access Control</h2>  <p>No roles needed to access the endpoint</p>  <h2>Expected Behavior</h2>  <p><b>Secretariat:</b> Can see the CVE ID quota information of any Organization</p>  <p><b>Admin User:</b> Can only see the CVE ID quota information of the Organization it belongs to</p>  <p><b>Regular User:</b> Can only see the CVE ID quota information of the Organization it belongs to</p>",
        "operationId": "orgIdQuota",
        "parameters": [
          {
            "name": "shortname",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The short name of the organization."
          },
          {
            "$ref": "#/components/parameters/apiEntityHeader"
          },
          {
            "$ref": "#/components/parameters/apiUserHeader"
          },
          {
            "$ref": "#/components/parameters/apiSecretHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns CVE ID quota details of an organization.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/idQuota200"
                },
                "examples": {
                  "idQuota200": {
                    "$ref": "#/components/examples/idQuota200"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorBadInput"
                },
                "examples": {
                  "errorBadInput": {
                    "$ref": "#/components/examples/errorBadInput"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Not Authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorGeneric"
                },
                "examples": {
                  "errorGeneric": {
                    "$ref": "#/components/examples/errorGeneric"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorGeneric"
                },
                "examples": {
                  "errorGeneric": {
                    "$ref": "#/components/examples/errorGeneric"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorGeneric"
                },
                "examples": {
                  "errorGeneric": {
                    "$ref": "#/components/examples/errorGeneric"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorGeneric"
                },
                "examples": {
                  "errorGeneric": {
                    "$ref": "#/components/examples/internalServerError"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Retrieve all users",
        "description": "  <h2>Access Control</h2>  <p> Only secretariat users can accesss the endpoint</p>  <h2>Expected Behavior</h2>  <p><b>Secretariat:</b> Can see the information of all users of any Organization</p>",
        "operationId": "userAll",
        "parameters": [
          {
            "$ref": "#/components/parameters/pageQuery"
          },
          {
            "$ref": "#/components/parameters/apiEntityHeader"
          },
          {
            "$ref": "#/components/parameters/apiUserHeader"
          },
          {
            "$ref": "#/components/parameters/apiSecretHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns all users.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/userOrgAll200"
                },
                "examples": {
                  "userOrgAll200": {
                    "$ref": "#/components/examples/userOrgAll200"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorBadInput"
                },
                "examples": {
                  "errorBadInput": {
                    "$ref": "#/components/examples/errorBadInput"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Not Authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorGeneric"
                },
                "examples": {
                  "errorGeneric": {
                    "$ref": "#/components/examples/errorGeneric"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorGeneric"
                },
                "examples": {
                  "errorGeneric": {
                    "$ref": "#/components/examples/errorGeneric"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorGeneric"
                },
                "examples": {
                  "errorGeneric": {
                    "$ref": "#/components/examples/errorGeneric"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorGeneric"
                },
                "examples": {
                  "errorGeneric": {
                    "$ref": "#/components/examples/internalServerError"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "examples": {
      "apiSecret": {
        "value": {
          "API-secret": "string"
        }
      },
      "createOrg200": {
        "value": {
          "message": "mitre organization was successfully created.",
          "created": {
            "name": "Mitre",
            "short_name": "mitre",
            "UUID": "00000000-0000-0000-0000-000000000000",
            "policies": {
              "id_quota": 100000
            },
            "authority": {
              "active_roles": [
                "CNA"
              ]
            },
            "time": {
              "created": "string",
              "modified": "string"
            }
          }
        }
      },
      "createOrgRequestBody": {
        "value": {
          "short_name": "mitre",
          "name": "Mitre",
          "uuid": "00000000-0000-0000-0000-000000000000",
          "authority": {
            "active_roles": [
              "CNA"
            ]
          },
          "policies": {
            "id_quota": 100000
          }
        }
      },
      "createUserRequestBody": {
        "value": {
          "username": "test@mitre.org",
          "name": {
            "first": "test",
            "last": "mitre",
            "middle": "test",
            "suffix": "test"
          },
          "authority": {
            "active_roles": [
              "ADMIN"
            ]
          }
        }
      },
      "createUser200": {
        "value": {
          "message": "test@mitre.org was successfully created.",
          "created": {
            "username": "test@mitre.org",
            "org_UUID": "00000000-0000-0000-0000-000000000000",
            "UUID": "00000000-0000-0000-0000-000000000000",
            "active": true,
            "name": {
              "first": "test",
              "last": "mitre",
              "middle": "test",
              "suffix": "test"
            },
            "secret": "string",
            "authority": {
              "active_roles": [
                "ADMIN"
              ]
            },
            "time": {
              "created": "string",
              "modified": "string"
            }
          }
        }
      },
      "cveIdGetFiltered200": {
        "value": {
          "totalCount": 0,
          "itemsPerPage": 0,
          "pageCount": 0,
          "currentPage": 0,
          "prevPage": 0,
          "nextPage": 0,
          "cve_ids": [
            {
              "cve_id": "CVE-1999-0001",
              "cve_year": "1999",
              "owning_cna": "mitre",
              "state": "RESERVED",
              "requested_by": {
                "cna": "string",
                "user": "string"
              }
            }
          ]
        }
      },
      "arrayOfCveIdsNoTime200": {
        "value": {
          "cve_ids": [
            {
              "cve_id": "CVE-1999-0001",
              "cve_year": "1999",
              "owning_cna": "mitre",
              "state": "RESERVED",
              "requested_by": {
                "cna": "string",
                "user": "string"
              },
              "reserved": "string"
            }
          ]
        }
      },
      "cveId200": {
        "value": {
          "cve_id": "CVE-1999-0001",
          "cve_year": "1999",
          "owning_cna": "mitre",
          "state": "RESERVED",
          "requested_by": {
            "cna": "string",
            "user": "string"
          },
          "reserved": "string",
          "time": {
            "created": "string",
            "modified": "string"
          }
        }
      },
      "errorBadInput": {
        "value": {
          "error": "string",
          "message": "string",
          "details": [
            {
              "msg": "string",
              "param": "string",
              "location": "string"
            }
          ]
        }
      },
      "errorCveIds206": {
        "value": {
          "error": "string",
          "message": "string",
          "details": {
            "amount_reserved": 0
          },
          "cve_ids": [
            {
              "cve_id": "CVE-1999-0001",
              "cve_year": "1999",
              "owning_cna": "mitre",
              "state": "RESERVED",
              "requested_by": {
                "cna": "string",
                "user": "string"
              },
              "reserved": "string"
            }
          ]
        }
      },
      "errorGeneric": {
        "value": {
          "error": "string",
          "message": "string"
        }
      },
      "idQuota200": {
        "value": {
          "id_quota": 1000,
          "total_reserved": 100,
          "available": 900
        }
      },
      "internalServerError": {
        "value": {
          "error": "SERVICE_NOT_AVAILABLE",
          "message": "This service appears to not be available."
        }
      },
      "org200": {
        "value": {
          "name": "Mitre",
          "short_name": "mitre",
          "UUID": "00000000-0000-0000-0000-000000000000",
          "policies": {
            "id_quota": 100000
          },
          "authority": {
            "active_roles": [
              "CNA"
            ]
          },
          "time": {
            "created": "string",
            "modified": "string"
          }
        }
      },
      "orgAll200": {
        "value": {
          "totalCount": 0,
          "itemsPerPage": 0,
          "pageCount": 0,
          "currentPage": 0,
          "prevPage": 0,
          "nextPage": 0,
          "organizations": [
            {
              "name": "string",
              "short_name": "string",
              "UUID": "string",
              "policies": {
                "id_quota": 100000
              },
              "authority": {
                "active_roles": [
                  "CNA"
                ]
              },
              "time": {
                "created": "string",
                "modified": "string"
              }
            }
          ]
        }
      },
      "updateCveId200": {
        "value": {
          "message": "CVE-1999-0001 was successfully updated.",
          "updated": {
            "cve_id": "CVE-1999-0001",
            "cve_year": "1999",
            "owning_cna": "mitre",
            "state": "RESERVED",
            "requested_by": {
              "cna": "string",
              "user": "string"
            },
            "reserved": "string",
            "time": {
              "created": "string",
              "modified": "string"
            }
          }
        }
      },
      "updateOrg200": {
        "value": {
          "message": "mitre organization was successfully updated.",
          "updated": {
            "name": "Mitre",
            "short_name": "mitre",
            "UUID": "00000000-0000-0000-0000-000000000000",
            "policies": {
              "id_quota": 100000
            },
            "authority": {
              "active_roles": [
                "CNA"
              ]
            },
            "time": {
              "created": "string",
              "modified": "string"
            }
          }
        }
      },
      "updatedUser200": {
        "value": {
          "message": "test@mitre.org  was successfully updated.",
          "updated": {
            "username": "test@mitre.org",
            "org_UUID": "00000000-0000-0000-0000-000000000000",
            "UUID": "00000000-0000-0000-0000-000000000000",
            "active": true,
            "name": {
              "first": "test",
              "last": "mitre",
              "middle": "test",
              "suffix": "test"
            },
            "authority": {
              "active_roles": [
                "ADMIN"
              ]
            },
            "time": {
              "created": "string",
              "modified": "string"
            }
          }
        }
      },
      "userOrgAll200": {
        "value": {
          "totalCount": 0,
          "itemsPerPage": 0,
          "pageCount": 0,
          "currentPage": 0,
          "prevPage": 0,
          "nextPage": 0,
          "users": [
            {
              "username": "test@mitre.org",
              "org_UUID": "00000000-0000-0000-0000-000000000000",
              "UUID": "00000000-0000-0000-0000-000000000000",
              "active": true,
              "name": {
                "first": "test",
                "last": "mitre",
                "middle": "test",
                "suffix": "test"
              },
              "authority": {
                "active_roles": [
                  "ADMIN"
                ]
              },
              "time": {
                "created": "string",
                "modified": "string"
              }
            }
          ]
        }
      },
      "userNoSecret": {
        "value": {
          "username": "test@mitre.org",
          "org_UUID": "00000000-0000-0000-0000-000000000000",
          "UUID": "00000000-0000-0000-0000-000000000000",
          "active": true,
          "name": {
            "first": "test",
            "last": "mitre",
            "middle": "test",
            "suffix": "test"
          },
          "authority": {
            "active_roles": [
              "ADMIN"
            ]
          },
          "time": {
            "created": "string",
            "modified": "string"
          }
        }
      }
    },
    "parameters": {
      "active": {
        "in": "query",
        "name": "active",
        "description": "Update the active state of the user record.",
        "required": false,
        "schema": {
          "type": "boolean"
        }
      },
      "active_roles_add": {
        "in": "query",
        "name": "active_roles.add",
        "description": "Add an active role to the organization.",
        "required": false,
        "schema": {
          "type": "string",
          "enum": [
            "CNA",
            "SECRETARIAT",
            "ROOT_CNA",
            "ADP"
          ]
        }
      },
      "active_roles_remove": {
        "in": "query",
        "name": "active_roles.remove",
        "description": "Remove an active role from the organization.",
        "required": false,
        "schema": {
          "type": "string",
          "enum": [
            "CNA",
            "SECRETARIAT",
            "ROOT_CNA",
            "ADP"
          ]
        }
      },
      "activeUserRolesAdd": {
        "in": "query",
        "name": "active_roles.add",
        "description": "Add an active role to the user.",
        "required": false,
        "schema": {
          "type": "string",
          "enum": [
            "ADMIN"
          ]
        }
      },
      "activeUserRolesRemove": {
        "in": "query",
        "name": "active_roles.remove",
        "description": "Remove an active role from the user.",
        "required": false,
        "schema": {
          "type": "string",
          "enum": [
            "ADMIN"
          ]
        }
      },
      "apiEntityHeader": {
        "in": "header",
        "name": "CVE-API-ORG",
        "description": "The shortname for the entity (e.g., CNA, ADP) that is authenticated or requesting authentication.",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "apiUserHeader": {
        "in": "header",
        "name": "CVE-API-USER",
        "description": "The username for the account that is making the request.",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "apiSecretHeader": {
        "in": "header",
        "name": "CVE-API-KEY",
        "description": "The user's API key.",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "amount": {
        "in": "query",
        "name": "amount",
        "description": "Amount of CVE IDs to reserve.",
        "required": true,
        "schema": {
          "type": "integer",
          "format": "int32"
        }
      },
      "assigner": {
        "in": "query",
        "name": "assigner",
        "description": "Specify the UUID for the org to which the cve id was assigned.",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "assignerShortName": {
        "in": "query",
        "name": "assignerShortName",
        "description": "Get the short name for the org to which the cve id was assigned.",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "batch_type": {
        "in": "query",
        "name": "batch_type",
        "description": "When the amount is greater than one, it indicates whether the CVE IDs should be sequential or non-sequential.",
        "required": false,
        "schema": {
          "type": "string",
          "enum": [
            "sequential",
            "non-sequential"
          ]
        }
      },
      "countOnly": {
        "in": "query",
        "name": "count_only",
        "description": "Get count of records that match query. Accepted values are 0 and 1, representing False and True, respectively.",
        "required": false,
        "schema": {
          "type": "boolean"
        }
      },
      "cveState": {
        "in": "query",
        "name": "state",
        "description": "Filter by CVE state.",
        "schema": {
          "type": "string",
          "enum": [
            "PUBLISHED",
            "REJECTED"
          ]
        }
      },
      "cve_year": {
        "in": "query",
        "name": "cve_year",
        "description": "The year the CVE IDs will be reserved for. (i.e., 1999, ..., currentYear + 1)",
        "required": true,
        "schema": {
          "type": "integer",
          "format": "int32"
        }
      },
      "cveIdGetFilteredState": {
        "in": "query",
        "name": "state",
        "description": "Filter by CVE state [RESERVED, PUBLISHED, REJECTED].",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "cveIdGetFilteredCveIdYear": {
        "in": "query",
        "name": "cve_id_year",
        "description": "Filter by the year in the CVE ID (YYYY).",
        "required": false,
        "schema": {
          "type": "integer",
          "format": "int32"
        }
      },
      "cveIdGetFilteredTimeReservedLt": {
        "in": "query",
        "name": "time_reserved.lt",
        "description": "Get all CVE-ID records reserved before timestamp.",
        "required": false,
        "schema": {
          "type": "string",
          "format": "date-time"
        }
      },
      "cveIdGetFilteredTimeReservedGt": {
        "in": "query",
        "name": "time_reserved.gt",
        "description": "Get all CVE-ID records reserved after timestamp.",
        "required": false,
        "schema": {
          "type": "string",
          "format": "date-time"
        }
      },
      "cveIdGetFilteredTimeModifiedLt": {
        "in": "query",
        "name": "time_modified.lt",
        "description": "Get all CVE-ID records modified before timestamp.",
        "required": false,
        "schema": {
          "type": "string",
          "format": "date-time"
        }
      },
      "cveIdGetFilteredTimeModifiedGt": {
        "in": "query",
        "name": "time_modified.gt",
        "description": "Get all CVE-ID records modified after timestamp.",
        "required": false,
        "schema": {
          "type": "string",
          "format": "date-time"
        }
      },
      "cveRecordFilteredTimeModifiedLt": {
        "in": "query",
        "name": "time_modified.lt",
        "description": "Get all CVE records modified before timestamp.",
        "required": false,
        "schema": {
          "type": "string",
          "format": "date-time"
        }
      },
      "cveRecordFilteredTimeModifiedGt": {
        "in": "query",
        "name": "time_modified.gt",
        "description": "Get all CVE records modified after timestamp.",
        "required": false,
        "schema": {
          "type": "string",
          "format": "date-time"
        }
      },
      "id_quota": {
        "in": "query",
        "name": "id_quota",
        "description": "Update the number of CVE IDs the organization is allowed to have in the RESERVED state at one time.",
        "required": false,
        "schema": {
          "type": "integer",
          "format": "int32",
          "minimum": 0,
          "maximum": 100000
        }
      },
      "name": {
        "in": "query",
        "name": "name",
        "description": "Update the name of the organization.",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "nameFirst": {
        "in": "query",
        "name": "name.first",
        "description": "Update the first name of the user record.",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "nameLast": {
        "in": "query",
        "name": "name.last",
        "description": "Update the last name of the user record.",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "nameMiddle": {
        "in": "query",
        "name": "name.middle",
        "description": "Update the middle name of the user record.",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "nameSuffix": {
        "in": "query",
        "name": "name.suffix",
        "description": "Update suffix of the user record.",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "newUsername": {
        "in": "query",
        "name": "new_username",
        "description": "Update the user name of the user record.",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "org": {
        "in": "query",
        "name": "org",
        "description": "Update the owning_cna of a CVE-ID record.",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "orgShortname": {
        "in": "query",
        "name": "org_shortname",
        "description": "Update the organization the user belongs to.",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "pageQuery": {
        "in": "query",
        "name": "page",
        "description": "The current page in the paginator.",
        "required": false,
        "schema": {
          "type": "integer",
          "format": "int32",
          "minimum": 1
        }
      },
      "short_name": {
        "in": "query",
        "name": "short_name",
        "description": "The CNA that will own the CVE IDs reserved.",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "shortname": {
        "in": "query",
        "name": "shortname",
        "description": "Update the short name of the organization.",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "state": {
        "in": "query",
        "name": "state",
        "description": "Update the state of a CVE-ID record.",
        "required": false,
        "schema": {
          "type": "string"
        }
      }
    },
    "schemas": {
      "apiSecret": {
        "type": "object",
        "properties": {
          "API-secret": {
            "type": "string",
            "description": "The new API key of the user."
          }
        }
      },
      "createOrg200": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Success description"
          },
          "created": {
            "$ref": "#/components/schemas/org"
          }
        }
      },
      "createOrgRequestBody": {
        "type": "object",
        "required": [
          "short_name",
          "name"
        ],
        "properties": {
          "short_name": {
            "type": "string",
            "description": "The short name of the organization."
          },
          "name": {
            "type": "string",
            "description": "The name of the organization."
          },
          "uuid": {
            "type": "string",
            "description": "The organization identifier."
          },
          "authority": {
            "type": "object",
            "properties": {
              "active_roles": {
                "type": "array",
                "items": {
                  "type": "string",
                  "description": "The active roles of the organization.",
                  "enum": [
                    "CNA",
                    "SECRETARIAT",
                    "ROOT_CNA",
                    "ADP"
                  ]
                }
              }
            }
          },
          "policies": {
            "type": "object",
            "properties": {
              "id_quota": {
                "type": "integer",
                "format": "int32",
                "description": "The CVE ID quota of the organization.",
                "minimum": 0,
                "maximum": 100000
              }
            }
          }
        }
      },
      "createUserRequestBody": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "description": "The user name of the user."
          },
          "name": {
            "type": "object",
            "properties": {
              "first": {
                "type": "string",
                "description": "The first name of the user."
              },
              "last": {
                "type": "string",
                "description": "The last name of the user."
              },
              "middle": {
                "type": "string",
                "description": "The middle name of the user, if any."
              },
              "suffix": {
                "type": "string",
                "description": "The suffix of the user, if any."
              }
            }
          },
          "authority": {
            "type": "object",
            "properties": {
              "active_roles": {
                "type": "array",
                "items": {
                  "type": "string",
                  "description": "The active roles of the user.",
                  "enum": [
                    "ADMIN"
                  ]
                }
              }
            }
          }
        }
      },
      "createUser200": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Success description"
          },
          "created": {
            "$ref": "#/components/schemas/user"
          }
        }
      },
      "cveId": {
        "type": "object",
        "properties": {
          "cve_id": {
            "type": "string",
            "pattern": "^CVE-[0-9]{4}-[0-9]{4,}$"
          },
          "cve_year": {
            "type": "string",
            "pattern": "^[0-9]{4}$"
          },
          "owning_cna": {
            "type": "string",
            "description": "The shortname for the organization that owns the CVE-ID."
          },
          "state": {
            "type": "string",
            "enum": [
              "RESERVED",
              "PUBLISHED",
              "REJECTED"
            ]
          },
          "requested_by": {
            "type": "object",
            "properties": {
              "cna": {
                "type": "string",
                "description": "The shortname for the organization of the user that requested the ID."
              },
              "user": {
                "type": "string",
                "description": "The username for the account that requested the ID."
              }
            }
          },
          "reserved": {
            "type": "string",
            "format": "date-time",
            "description": "The time the ID was reserved."
          },
          "time": {
            "type": "object",
            "properties": {
              "created": {
                "type": "string",
                "format": "date-time",
                "description": "The time the ID was created."
              },
              "modified": {
                "type": "string",
                "format": "date-time",
                "description": "The last time the ID was modified."
              }
            }
          }
        }
      },
      "cveIdNoTime": {
        "type": "object",
        "properties": {
          "cve_id": {
            "type": "string",
            "pattern": "^CVE-[0-9]{4}-[0-9]{4,}$"
          },
          "cve_year": {
            "type": "string",
            "pattern": "^[0-9]{4}$"
          },
          "owning_cna": {
            "type": "string",
            "description": "The shortname for the organization that owns the CVE-ID."
          },
          "state": {
            "type": "string",
            "enum": [
              "RESERVED",
              "PUBLISHED",
              "REJECTED"
            ]
          },
          "requested_by": {
            "type": "object",
            "properties": {
              "cna": {
                "type": "string",
                "description": "The shortname for the organization of the user that requested the ID."
              },
              "user": {
                "type": "string",
                "description": "The username for the account that requested the ID."
              }
            }
          },
          "reserved": {
            "type": "string",
            "format": "date-time",
            "description": "The time the ID was reserved."
          }
        }
      },
      "arrayOfCveIds": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/cveId"
        }
      },
      "arrayOfCveIdsNoTime": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/cveIdNoTime"
        }
      },
      "arrayOfOrgs": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/org"
        }
      },
      "arrayOfOrgsNotTime": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/orgNoTime"
        }
      },
      "arrayOfUsersNoSecret": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/userNoSecret"
        }
      },
      "cveIdGetFiltered200": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "format": "int32",
            "description": "Total CVE records found"
          },
          "itemsPerPage": {
            "type": "integer",
            "format": "int32",
            "description": "Number of CVE records in a page"
          },
          "pageCount": {
            "type": "integer",
            "format": "int32",
            "description": "Total number of pages"
          },
          "currentPage": {
            "type": "integer",
            "format": "int32",
            "description": "Current page"
          },
          "prevPage": {
            "type": "integer",
            "format": "int32",
            "description": "Previous page"
          },
          "nextPage": {
            "type": "integer",
            "format": "int32",
            "description": "Next page"
          },
          "cve_ids": {
            "$ref": "#/components/schemas/arrayOfCveIds"
          }
        }
      },
      "errorBadInput": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string",
            "description": "Error name"
          },
          "message": {
            "type": "string",
            "description": "Error description"
          },
          "details": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "msg": {
                  "type": "string",
                  "description": "Invalid value"
                },
                "param": {
                  "type": "string",
                  "description": "The name of the parameter with the error"
                },
                "location": {
                  "type": "string",
                  "enum": [
                    "body",
                    "param",
                    "query"
                  ],
                  "description": "The location of the parameter"
                }
              }
            }
          }
        }
      },
      "errorCveIds": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string",
            "description": "Error name"
          },
          "message": {
            "type": "string",
            "description": "Error description"
          },
          "details": {
            "type": "object",
            "properties": {
              "amount_reserved": {
                "type": "integer",
                "format": "int32",
                "description": "The amount of IDs that were reserved in the system."
              }
            }
          },
          "cve_ids": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/cveIdNoTime"
            }
          }
        }
      },
      "errorGeneric": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string",
            "description": "Error name"
          },
          "message": {
            "type": "string",
            "description": "Error description"
          }
        }
      },
      "idQuota200": {
        "type": "object",
        "properties": {
          "id_quota": {
            "type": "integer",
            "format": "int32",
            "description": "The number of CVE IDs the organization is allowed to have in the RESERVED state at one time."
          },
          "total_reserved": {
            "type": "integer",
            "format": "int32",
            "description": "The total number of CVE IDs across all years that the organization has in the RESERVED state."
          },
          "available": {
            "type": "integer",
            "format": "int32",
            "description": "The number of CVE IDs that can be reserved by the organization. (e.g., id_quota - total_reserved)"
          }
        }
      },
      "org": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the organization."
          },
          "short_name": {
            "type": "string",
            "description": "The short name of the organization."
          },
          "UUID": {
            "type": "string",
            "description": "The identifier of the organization."
          },
          "policies": {
            "type": "object",
            "properties": {
              "id_quota": {
                "type": "integer",
                "format": "int32",
                "description": "The number of CVE IDs the organization is allowed to have in the RESERVED state at one time.",
                "minimum": 0,
                "maximum": 100000
              }
            }
          },
          "authority": {
            "type": "object",
            "properties": {
              "active_roles": {
                "type": "array",
                "items": {
                  "type": "string",
                  "description": "The active roles of the organization.",
                  "enum": [
                    "CNA",
                    "SECRETARIAT",
                    "ROOT_CNA",
                    "ADP"
                  ]
                }
              }
            }
          },
          "time": {
            "type": "object",
            "properties": {
              "created": {
                "type": "string",
                "format": "date-time",
                "description": "The time the organization was created."
              },
              "modified": {
                "type": "string",
                "format": "date-time",
                "description": "The last time the organization was modified."
              }
            }
          }
        }
      },
      "orgNoTime": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the organization."
          },
          "short_name": {
            "type": "string",
            "description": "The short name of the organization."
          },
          "UUID": {
            "type": "string",
            "description": "The identifier of the organization."
          },
          "policies": {
            "type": "object",
            "properties": {
              "id_quota": {
                "type": "integer",
                "format": "int32",
                "description": "The number of CVE IDs the organization is allowed to have in the RESERVED state at one time."
              }
            }
          },
          "authority": {
            "type": "object",
            "properties": {
              "active_roles": {
                "type": "array",
                "items": {
                  "type": "string",
                  "description": "The active roles of the organization.",
                  "enum": [
                    "CNA",
                    "SECRETARIAT",
                    "ROOT_CNA",
                    "ADP"
                  ]
                }
              }
            }
          }
        }
      },
      "orgAll200": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "format": "int32",
            "description": "Total CVE records found"
          },
          "itemsPerPage": {
            "type": "integer",
            "format": "int32",
            "description": "Number of CVE records in a page"
          },
          "pageCount": {
            "type": "integer",
            "format": "int32",
            "description": "Total number of pages"
          },
          "currentPage": {
            "type": "integer",
            "format": "int32",
            "description": "Current page"
          },
          "prevPage": {
            "type": "integer",
            "format": "int32",
            "description": "Previous page"
          },
          "nextPage": {
            "type": "integer",
            "format": "int32",
            "description": "Next page"
          },
          "organizations": {
            "$ref": "#/components/schemas/arrayOfOrgs"
          }
        }
      },
      "updateCveId200": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Success description"
          },
          "updated": {
            "$ref": "#/components/schemas/cveId"
          }
        }
      },
      "updateOrg200": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Success description"
          },
          "updated": {
            "$ref": "#/components/schemas/org"
          }
        }
      },
      "userNoTimeSecret": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "description": "The user name of the user."
          },
          "org_UUID": {
            "type": "string",
            "description": "The identifier of the organization the user belongs to."
          },
          "UUID": {
            "type": "string",
            "description": "The identifier of the user."
          },
          "active": {
            "type": "string",
            "description": "The user is an active user of the organization."
          },
          "name": {
            "type": "object",
            "properties": {
              "first": {
                "type": "string",
                "description": "The first name of the user."
              },
              "last": {
                "type": "string",
                "description": "The last name of the user."
              },
              "middle": {
                "type": "string",
                "description": "The middle name of the user, if any."
              },
              "suffix": {
                "type": "string",
                "description": "The suffix of the user, if any."
              }
            }
          },
          "authority": {
            "type": "object",
            "properties": {
              "active_roles": {
                "type": "array",
                "items": {
                  "type": "string",
                  "description": "The active roles of the user.",
                  "enum": [
                    "ADMIN"
                  ]
                }
              }
            }
          }
        }
      },
      "updatedUser200": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Success description"
          },
          "updated": {
            "$ref": "#/components/schemas/userNoSecret"
          }
        }
      },
      "user": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "description": "The user name of the user."
          },
          "org_UUID": {
            "type": "string",
            "description": "The identifier of the organization the user belongs to."
          },
          "UUID": {
            "type": "string",
            "description": "The identifier of the user."
          },
          "active": {
            "type": "string",
            "description": "The user is an active user of the organization."
          },
          "name": {
            "type": "object",
            "properties": {
              "first": {
                "type": "string",
                "description": "The first name of the user."
              },
              "last": {
                "type": "string",
                "description": "The last name of the user."
              },
              "middle": {
                "type": "string",
                "description": "The middle name of the user, if any."
              },
              "suffix": {
                "type": "string",
                "description": "The suffix of the user, if any."
              }
            }
          },
          "secret": {
            "type": "string",
            "description": "The API key of the user."
          },
          "authority": {
            "type": "object",
            "properties": {
              "active_roles": {
                "type": "array",
                "items": {
                  "type": "string",
                  "description": "The active roles of the user.",
                  "enum": [
                    "ADMIN"
                  ]
                }
              }
            }
          },
          "time": {
            "type": "object",
            "properties": {
              "created": {
                "type": "string",
                "format": "date-time",
                "description": "The time the user was created."
              },
              "modified": {
                "type": "string",
                "format": "date-time",
                "description": "The last time the user was modified."
              }
            }
          }
        }
      },
      "userNoSecret": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "description": "The user name of the user."
          },
          "org_UUID": {
            "type": "string",
            "description": "The identifier of the organization the user belongs to."
          },
          "UUID": {
            "type": "string",
            "description": "The identifier of the user."
          },
          "active": {
            "type": "string",
            "description": "The user is an active user of the organization."
          },
          "name": {
            "type": "object",
            "properties": {
              "first": {
                "type": "string",
                "description": "The first name of the user."
              },
              "last": {
                "type": "string",
                "description": "The last name of the user."
              },
              "middle": {
                "type": "string",
                "description": "The middle name of the user, if any."
              },
              "suffix": {
                "type": "string",
                "description": "The suffix of the user, if any."
              }
            }
          },
          "authority": {
            "type": "object",
            "properties": {
              "active_roles": {
                "type": "array",
                "items": {
                  "type": "string",
                  "description": "The active roles of the user.",
                  "enum": [
                    "ADMIN"
                  ]
                }
              }
            }
          },
          "time": {
            "type": "object",
            "properties": {
              "created": {
                "type": "string",
                "format": "date-time",
                "description": "The time the user was created."
              },
              "modified": {
                "type": "string",
                "format": "date-time",
                "description": "The last time the user was modified."
              }
            }
          }
        }
      },
      "userOrgAll200": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "itemsPerPage": {
            "type": "integer",
            "format": "int32"
          },
          "pageCount": {
            "type": "integer",
            "format": "int32"
          },
          "currentPage": {
            "type": "integer",
            "format": "int32"
          },
          "prevPage": {
            "type": "integer",
            "format": "int32"
          },
          "nextPage": {
            "type": "integer",
            "format": "int32"
          },
          "users": {
            "$ref": "#/components/schemas/arrayOfUsersNoSecret"
          }
        }
      }
    }
  }
}
