const cveId = require('../model/cve-id')
const uuidv4 = require('uuid/v4')

/**
* @api {post} /cve-id Allocate CVE ID
* @apiName Allocate CVE ID
* @apiGroup CVE
* @apiVersion  0.0.0
* @apiDescription
* This method will allocate one non-sequential CVE ID to the requestor. The backend database will be
* updated to reflect the allocated CVE IDs, status (i.e. "Reserved"), and requestors identity & associated CNA (as provided by
* the CVE Authentication and Authorization Services).

*@apiSuccessExample Success-Response:
*HTTP/1.1 200 OK
[
  {
       "cve_id": "CVE-2009-74007fad-fe80-4770-a5b3-7e47a5093122",
       "status": "Free",
       "Requestor": {
           "user_id": "246aef24-c31e-485e-ab03-133fa0cc3442",
           "user_name": "User Name"
       },
       "Organization": {
           "org_id": "3bb4c1e8-84fd-466a-bc32-b39a5ba5df4a",
           "org_name": "Org Name "
       },
       "History": "TBD"
   }
]
*/
const allocateCveId = (request, response) => {
  // create cve id
  const cveid = new cveId.CveId({ id: 'CVE-' + Date().getFullYear().toString() + '-' + uuidv4() })
  // save in mongo
  cveid.save(function (err, cveid) {
    if (err) {
      console.error(err)
      return response.status(500)
    } else {
      response.status(200).json(cveid)
    }
  })
}

module.exports = {
  allocateCveId: allocateCveId
}
