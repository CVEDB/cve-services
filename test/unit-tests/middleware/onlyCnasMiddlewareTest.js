const server = require('../../../test-utils/index')
const chai = require('chai')
const expect = chai.expect
chai.use(require('chai-http'))
const secretariatHeaders = require('./onlyCnas.fixtures').secretariatHeaders
const secretariatAndCnaHeaders = require('./onlyCnas.fixtures').secretariatAndCnaHeaders
const notCnaHeaders = require('./onlyCnas.fixtures').notCnaHeaders
const cnaHeaders = require('./onlyCnas.fixtures').cnaHeaders
const errors = require('../../../src/middleware/error')
const error = new errors.MiddlewareError()

describe('Test only CNA middleware', () => {
  context('Positive Tests', function () {
    it('Requester is a CNA', function (done) {
      chai.request(server)
        .post('/only-cnas-org-cna-passes')
        .set(cnaHeaders)
        .send()
        .end((err, res) => {
          if (err) {
            done(err)
          }

          expect(res).to.have.status(200)
          expect(res).to.have.property('body').and.to.be.a('object')
          expect(res.body).to.have.property('message').and.to.be.a('string')
          expect(res.body.message).to.equal('Success! You have reached the target endpoint.')
          done()
        })
    })

    it('Requester is a CNA and a secretariat', function (done) {
      chai.request(server)
        .post('/only-cnas-org-cna-and-secretariat-passes')
        .set(secretariatAndCnaHeaders)
        .send()
        .end((err, res) => {
          if (err) {
            done(err)
          }

          expect(res).to.have.status(200)
          expect(res).to.have.property('body').and.to.be.a('object')
          expect(res.body).to.have.property('message').and.to.be.a('string')
          expect(res.body.message).to.equal('Success! You have reached the target endpoint.')
          done()
        })
    })

    // This test will change with the implementation of Root CNAs, as the burden of reserving IDs
    // on behalf of other organizations transfers to Roots. Secretariat will then step back.
    it('Requester is a secretariat but not a CNA', function (done) {
      chai.request(server)
        .post('/only-cnas-org-secretariat-passes')
        .set(secretariatHeaders)
        .send()
        .end((err, res) => {
          if (err) {
            done(err)
          }

          expect(res).to.have.status(200)
          expect(res).to.have.property('body').and.to.be.a('object')
          expect(res.body).to.have.property('message').and.to.be.a('string')
          expect(res.body.message).to.equal('Success! You have reached the target endpoint.')
          done()
        })
    })
  })

  context('Negative Tests', function () {
    it('Requester is not a CNA or a secretariat', function (done) {
      chai.request(server)
        .post('/only-cnas-org-not-cna-rejected')
        .set(notCnaHeaders)
        .send()
        .end((err, res) => {
          if (err) {
            done(err)
          }

          expect(res).to.have.status(403)
          expect(res).to.have.property('body').and.to.be.a('object')
          const errObj = error.cnaOnly()
          expect(res.body.error).to.equal(errObj.error)
          expect(res.body.message).to.equal(errObj.message)
          done()
        })
    })
  })
})
