const server = require('../../../test-utils/index')
const chai = require('chai')
const expect = chai.expect
chai.use(require('chai-http'))
const fixtures = require('./onlySecretariatOrAdmin.fixtures')
const errors = require('../../../src/middleware/error')
const error = new errors.MiddlewareError()

describe('Test only Secretariat middleware', () => {
  context('Positive Tests', function () {
    it('User is a secretariat', function (done) {
      chai.request(server)
        .post('/only-secretariat-or-admin-pass')
        .set(fixtures.secretariatHeaders)
        .send()
        .end((err, res) => {
          if (err) {
            done(err)
          }

          expect(res).to.have.status(200)
          expect(res).to.have.property('body').and.to.be.a('object')
          expect(res.body).to.have.property('message').and.to.be.a('string')
          expect(res.body.message).to.equal('Success! You have reached the target endpoint.')
          done()
        })
    })

    it('User is an admin user', function (done) {
      chai.request(server)
        .post('/only-secretariat-or-admin-pass')
        .set(fixtures.adminHeaders)
        .send()
        .end((err, res) => {
          if (err) {
            done(err)
          }

          expect(res).to.have.status(200)
          expect(res).to.have.property('body').and.to.be.a('object')
          expect(res.body).to.have.property('message').and.to.be.a('string')
          expect(res.body.message).to.equal('Success! You have reached the target endpoint.')
          done()
        })
    })

    it('User is a secretariat and an admin user', function (done) {
      chai.request(server)
        .post('/only-secretariat-or-admin-pass')
        .set(fixtures.secretariatAndAdminHeaders)
        .send()
        .end((err, res) => {
          if (err) {
            done(err)
          }

          expect(res).to.have.status(200)
          expect(res).to.have.property('body').and.to.be.a('object')
          expect(res.body).to.have.property('message').and.to.be.a('string')
          expect(res.body.message).to.equal('Success! You have reached the target endpoint.')
          done()
        })
    })
  })

  context('Negative Tests', function () {
    it('User is not a secretariat or an admin user', function (done) {
      chai.request(server)
        .post('/only-secretariat-or-admin-reject')
        .set(fixtures.regHeaders)
        .send()
        .end((err, res) => {
          if (err) {
            done(err)
          }

          expect(res).to.have.status(403)
          expect(res).to.have.property('body').and.to.be.a('object')
          const errObj = error.notOrgAdminOrSecretariat()
          expect(res.body.error).to.equal(errObj.error)
          expect(res.body.message).to.equal(errObj.message)
          done()
        })
    })
  })
})
